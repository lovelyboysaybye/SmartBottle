ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Filter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_FtInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_FtInitialize, %function
  25              	CapSense_FtInitialize:
  26              	.LFB36:
  27              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 2.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v2.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 2


  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  33              		.loc 1 70 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE36:
  38              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  39 0002 C046     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  40              		.align	2
  41              		.global	CapSense_FtInitializeBaselineChannel
  42              		.code	16
  43              		.thumb_func
  44              		.type	CapSense_FtInitializeBaselineChannel, %function
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 3


  45              	CapSense_FtInitializeBaselineChannel:
  46              	.LFB45:
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 4


 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 5


 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 6


 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 7


 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 8


 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 9


 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 10


 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 11


 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  47              		.loc 1 555 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  53              		.loc 1 557 0
  54 0000 FF23     		movs	r3, #255
  55 0002 1940     		ands	r1, r3
  56              	.LVL1:
  57 0004 0629     		cmp	r1, #6
  58 0006 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  59              		.loc 1 561 0
  60 0008 8318     		adds	r3, r0, r2
  61 000a 0021     		movs	r1, #0
  62 000c 1971     		strb	r1, [r3, #4]
  63              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 12


 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  64              		.loc 1 578 0
  65 000e 5300     		lsls	r3, r2, #1
  66 0010 195A     		ldrh	r1, [r3, r0]
  67 0012 C318     		adds	r3, r0, r3
  68 0014 5980     		strh	r1, [r3, #2]
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  69              		.loc 1 585 0
  70 0016 8218     		adds	r2, r0, r2
  71              	.LVL2:
  72 0018 0023     		movs	r3, #0
  73 001a 1372     		strb	r3, [r2, #8]
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
  74              		.loc 1 586 0
  75              		@ sp needed
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE45:
  79              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  80 001e C046     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  81              		.align	2
  82              		.global	CapSense_FtInitializeBaseline
  83              		.code	16
  84              		.thumb_func
  85              		.type	CapSense_FtInitializeBaseline, %function
  86              	CapSense_FtInitializeBaseline:
  87              	.LFB44:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  88              		.loc 1 528 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL3:
  93 0000 70B5     		push	{r4, r5, r6, lr}
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 4, -16
  96              		.cfi_offset 5, -12
  97              		.cfi_offset 6, -8
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 13


  98              		.cfi_offset 14, -4
  99 0002 0600     		movs	r6, r0
 100 0004 0D00     		movs	r5, r1
 101              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 102              		.loc 1 532 0
 103 0006 0123     		movs	r3, #1
 104 0008 05E0     		b	.L5
 105              	.LVL5:
 106              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107              		.loc 1 534 0
 108 000a 2200     		movs	r2, r4
 109 000c 2900     		movs	r1, r5
 110 000e 3000     		movs	r0, r6
 111 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 112              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 113              		.loc 1 532 0
 114 0014 2300     		movs	r3, r4
 115              	.LVL7:
 116              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 117              		.loc 1 532 0 is_stmt 0 discriminator 1
 118 0016 5C1E     		subs	r4, r3, #1
 119              	.LVL8:
 120 0018 002B     		cmp	r3, #0
 121 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 122              		.loc 1 536 0 is_stmt 1
 123              		@ sp needed
 124              	.LVL9:
 125              	.LVL10:
 126              	.LVL11:
 127 001c 70BD     		pop	{r4, r5, r6, pc}
 128              		.cfi_endproc
 129              	.LFE44:
 130              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 131 001e C046     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 132              		.align	2
 133              		.global	CapSense_InitializeSensorBaseline
 134              		.code	16
 135              		.thumb_func
 136              		.type	CapSense_InitializeSensorBaseline, %function
 137              	CapSense_InitializeSensorBaseline:
 138              	.LFB43:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 139              		.loc 1 500 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL12:
 144 0000 70B5     		push	{r4, r5, r6, lr}
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 14


 149              		.cfi_offset 14, -4
 150              	.LVL13:
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 151              		.loc 1 506 0
 152 0002 094C     		ldr	r4, .L8
 153 0004 C300     		lsls	r3, r0, #3
 154 0006 1D1A     		subs	r5, r3, r0
 155 0008 AA00     		lsls	r2, r5, #2
 156 000a A218     		adds	r2, r4, r2
 157 000c 9568     		ldr	r5, [r2, #8]
 158              	.LVL14:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159              		.loc 1 507 0
 160 000e 8A00     		lsls	r2, r1, #2
 161 0010 5118     		adds	r1, r2, r1
 162              	.LVL15:
 163 0012 4A00     		lsls	r2, r1, #1
 164 0014 AA18     		adds	r2, r5, r2
 165              	.LVL16:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 166              		.loc 1 509 0
 167 0016 1B1A     		subs	r3, r3, r0
 168 0018 9900     		lsls	r1, r3, #2
 169 001a 6118     		adds	r1, r4, r1
 170 001c 897E     		ldrb	r1, [r1, #26]
 171 001e 1000     		movs	r0, r2
 172              	.LVL17:
 173 0020 FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 174              	.LVL18:
 510:Generated_Source\PSoC6/CapSense_Filter.c **** 
 175              		.loc 1 510 0
 176              		@ sp needed
 177              	.LVL19:
 178 0024 70BD     		pop	{r4, r5, r6, pc}
 179              	.L9:
 180 0026 C046     		.align	2
 181              	.L8:
 182 0028 00000000 		.word	CapSense_dsFlash
 183              		.cfi_endproc
 184              	.LFE43:
 185              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 186              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 187              		.align	2
 188              		.global	CapSense_InitializeWidgetBaseline
 189              		.code	16
 190              		.thumb_func
 191              		.type	CapSense_InitializeWidgetBaseline, %function
 192              	CapSense_InitializeWidgetBaseline:
 193              	.LFB42:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 194              		.loc 1 456 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL20:
 199 0000 70B5     		push	{r4, r5, r6, lr}
 200              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 15


 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 6, -8
 204              		.cfi_offset 14, -4
 205 0002 0500     		movs	r5, r0
 206              	.LVL21:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 207              		.loc 1 463 0
 208 0004 C200     		lsls	r2, r0, #3
 209 0006 121A     		subs	r2, r2, r0
 210 0008 9300     		lsls	r3, r2, #2
 211 000a 064A     		ldr	r2, .L13
 212 000c D318     		adds	r3, r2, r3
 213 000e 1B8B     		ldrh	r3, [r3, #24]
 214              	.LVL22:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 215              		.loc 1 465 0
 216 0010 04E0     		b	.L11
 217              	.LVL23:
 218              	.L12:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 219              		.loc 1 467 0
 220 0012 2100     		movs	r1, r4
 221 0014 2800     		movs	r0, r5
 222 0016 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 223              	.LVL24:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 224              		.loc 1 465 0
 225 001a 2300     		movs	r3, r4
 226              	.LVL25:
 227              	.L11:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 228              		.loc 1 465 0 is_stmt 0 discriminator 1
 229 001c 5C1E     		subs	r4, r3, #1
 230              	.LVL26:
 231 001e 002B     		cmp	r3, #0
 232 0020 F7D1     		bne	.L12
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 233              		.loc 1 469 0 is_stmt 1
 234              		@ sp needed
 235              	.LVL27:
 236              	.LVL28:
 237 0022 70BD     		pop	{r4, r5, r6, pc}
 238              	.L14:
 239              		.align	2
 240              	.L13:
 241 0024 00000000 		.word	CapSense_dsFlash
 242              		.cfi_endproc
 243              	.LFE42:
 244              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 245              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 246              		.align	2
 247              		.global	CapSense_InitializeAllBaselines
 248              		.code	16
 249              		.thumb_func
 250              		.type	CapSense_InitializeAllBaselines, %function
 251              	CapSense_InitializeAllBaselines:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 16


 252              	.LFB41:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 253              		.loc 1 420 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 10B5     		push	{r4, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
 261              	.LVL29:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 262              		.loc 1 423 0
 263 0002 0A23     		movs	r3, #10
 264 0004 03E0     		b	.L16
 265              	.LVL30:
 266              	.L17:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 267              		.loc 1 425 0
 268 0006 2000     		movs	r0, r4
 269 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 270              	.LVL31:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 271              		.loc 1 423 0
 272 000c 2300     		movs	r3, r4
 273              	.LVL32:
 274              	.L16:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 275              		.loc 1 423 0 is_stmt 0 discriminator 1
 276 000e 5C1E     		subs	r4, r3, #1
 277              	.LVL33:
 278 0010 002B     		cmp	r3, #0
 279 0012 F8D1     		bne	.L17
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 280              		.loc 1 427 0 is_stmt 1
 281              		@ sp needed
 282              	.LVL34:
 283 0014 10BD     		pop	{r4, pc}
 284              		.cfi_endproc
 285              	.LFE41:
 286              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 287 0016 C046     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 288              		.align	2
 289              		.global	CapSense_FtIIR1stOrder
 290              		.code	16
 291              		.thumb_func
 292              		.type	CapSense_FtIIR1stOrder, %function
 293              	CapSense_FtIIR1stOrder:
 294              	.LFB46:
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 17


 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 18


 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 19


 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 20


 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 21


 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 22


 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 23


 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 24


 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 25


1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 26


1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 27


1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 28


1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 29


1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 30


1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 31


1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 32


1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 33


1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 34


1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 35


1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 36


1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 295              		.loc 1 1702 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL35:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 301              		.loc 1 1710 0
 302 0000 9840     		lsls	r0, r0, r3
 303              	.LVL36:
 304 0002 5043     		muls	r0, r2
 305 0004 8023     		movs	r3, #128
 306              	.LVL37:
 307 0006 5B00     		lsls	r3, r3, #1
 308 0008 9A1A     		subs	r2, r3, r2
 309              	.LVL38:
 310 000a 5143     		muls	r1, r2
 311              	.LVL39:
 312 000c 4018     		adds	r0, r0, r1
 313 000e 000A     		lsrs	r0, r0, #8
 314              	.LVL40:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 37


 315              		.loc 1 1714 0
 316              		@ sp needed
 317 0010 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE46:
 320              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 321 0012 C046     		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 322              		.align	2
 323              		.global	CapSense_FtUpdateBaseline
 324              		.code	16
 325              		.thumb_func
 326              		.type	CapSense_FtUpdateBaseline, %function
 327              	CapSense_FtUpdateBaseline:
 328              	.LFB40:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 329              		.loc 1 259 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL41:
 334 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 335              		.cfi_def_cfa_offset 20
 336              		.cfi_offset 4, -20
 337              		.cfi_offset 5, -16
 338              		.cfi_offset 6, -12
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 4746     		mov	r7, r8
 342 0004 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 8, -24
 345 0006 82B0     		sub	sp, sp, #8
 346              		.cfi_def_cfa_offset 32
 347 0008 0700     		movs	r7, r0
 348 000a 0E00     		movs	r6, r1
 349 000c 0192     		str	r2, [sp, #4]
 350              	.LVL42:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 351              		.loc 1 271 0
 352 000e 0123     		movs	r3, #1
 353 0010 3EE0     		b	.L20
 354              	.LVL43:
 355              	.L27:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 356              		.loc 1 283 0
 357 0012 6300     		lsls	r3, r4, #1
 358 0014 985B     		ldrh	r0, [r3, r6]
 359 0016 F318     		adds	r3, r6, r3
 360 0018 5988     		ldrh	r1, [r3, #2]
 361 001a 8842     		cmp	r0, r1
 362 001c 05D3     		bcc	.L21
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 363              		.loc 1 285 0
 364 001e 431A     		subs	r3, r0, r1
 365              	.LVL44:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 366              		.loc 1 287 0
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 38


 367 0020 3219     		adds	r2, r6, r4
 368 0022 0025     		movs	r5, #0
 369 0024 1572     		strb	r5, [r2, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 370              		.loc 1 286 0
 371 0026 0122     		movs	r2, #1
 372 0028 01E0     		b	.L22
 373              	.LVL45:
 374              	.L21:
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 375              		.loc 1 291 0
 376 002a 0B1A     		subs	r3, r1, r0
 377              	.LVL46:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 378              		.loc 1 292 0
 379 002c 0022     		movs	r2, #0
 380              	.LVL47:
 381              	.L22:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 382              		.loc 1 296 0
 383 002e 002A     		cmp	r2, #0
 384 0030 11D1     		bne	.L23
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 385              		.loc 1 296 0 is_stmt 0 discriminator 1
 386 0032 7D79     		ldrb	r5, [r7, #5]
 387 0034 AB42     		cmp	r3, r5
 388 0036 0ED9     		bls	.L23
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 389              		.loc 1 298 0 is_stmt 1
 390 0038 3319     		adds	r3, r6, r4
 391              	.LVL48:
 392 003a 1B7A     		ldrb	r3, [r3, #8]
 393 003c 3A7A     		ldrb	r2, [r7, #8]
 394              	.LVL49:
 395 003e 9342     		cmp	r3, r2
 396 0040 05D3     		bcc	.L24
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 397              		.loc 1 300 0
 398 0042 2200     		movs	r2, r4
 399 0044 0199     		ldr	r1, [sp, #4]
 400 0046 3000     		movs	r0, r6
 401 0048 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 402              	.LVL50:
 403 004c 1FE0     		b	.L25
 404              	.L24:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 405              		.loc 1 304 0
 406 004e 3219     		adds	r2, r6, r4
 407 0050 0133     		adds	r3, r3, #1
 408 0052 1372     		strb	r3, [r2, #8]
 409 0054 1BE0     		b	.L25
 410              	.LVL51:
 411              	.L23:
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 412              		.loc 1 311 0
 413 0056 3D79     		ldrb	r5, [r7, #4]
 414 0058 AB42     		cmp	r3, r5
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 39


 415 005a 04D9     		bls	.L26
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 416              		.loc 1 312 0 discriminator 1
 417 005c 7D79     		ldrb	r5, [r7, #5]
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 418              		.loc 1 311 0 discriminator 1
 419 005e AB42     		cmp	r3, r5
 420 0060 15D2     		bcs	.L25
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 421              		.loc 1 312 0
 422 0062 002A     		cmp	r2, #0
 423 0064 13D1     		bne	.L25
 424              	.L26:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 425              		.loc 1 318 0
 426 0066 FF23     		movs	r3, #255
 427              	.LVL52:
 428 0068 019A     		ldr	r2, [sp, #4]
 429              	.LVL53:
 430 006a 1340     		ands	r3, r2
 431 006c 062B     		cmp	r3, #6
 432 006e 0ED0     		beq	.L25
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 433              		.loc 1 322 0
 434 0070 0902     		lsls	r1, r1, #8
 435              	.LVL54:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 436              		.loc 1 323 0
 437 0072 3319     		adds	r3, r6, r4
 438 0074 9846     		mov	r8, r3
 439 0076 1B79     		ldrb	r3, [r3, #4]
 440 0078 1943     		orrs	r1, r3
 441              	.LVL55:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 442              		.loc 1 334 0
 443 007a 0823     		movs	r3, #8
 444 007c 0122     		movs	r2, #1
 445 007e FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 446              	.LVL56:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 447              		.loc 1 340 0
 448 0082 020A     		lsrs	r2, r0, #8
 449 0084 6300     		lsls	r3, r4, #1
 450 0086 F318     		adds	r3, r6, r3
 451 0088 5A80     		strh	r2, [r3, #2]
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 452              		.loc 1 341 0
 453 008a 4346     		mov	r3, r8
 454 008c 1871     		strb	r0, [r3, #4]
 455              	.LVL57:
 456              	.L25:
 457 008e 2300     		movs	r3, r4
 458              	.LVL58:
 459              	.L20:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 460              		.loc 1 271 0 discriminator 1
 461 0090 5C1E     		subs	r4, r3, #1
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 40


 462              	.LVL59:
 463 0092 002B     		cmp	r3, #0
 464 0094 BDD1     		bne	.L27
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465              		.loc 1 398 0
 466 0096 0020     		movs	r0, #0
 467 0098 02B0     		add	sp, sp, #8
 468              		@ sp needed
 469              	.LVL60:
 470              	.LVL61:
 471              	.LVL62:
 472 009a 04BC     		pop	{r2}
 473 009c 9046     		mov	r8, r2
 474 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 475              		.cfi_endproc
 476              	.LFE40:
 477              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 478              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 479              		.align	2
 480              		.global	CapSense_UpdateSensorBaseline
 481              		.code	16
 482              		.thumb_func
 483              		.type	CapSense_UpdateSensorBaseline, %function
 484              	CapSense_UpdateSensorBaseline:
 485              	.LFB39:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 486              		.loc 1 201 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LVL63:
 491 0000 70B5     		push	{r4, r5, r6, lr}
 492              		.cfi_def_cfa_offset 16
 493              		.cfi_offset 4, -16
 494              		.cfi_offset 5, -12
 495              		.cfi_offset 6, -8
 496              		.cfi_offset 14, -4
 497              	.LVL64:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 498              		.loc 1 206 0
 499 0002 094D     		ldr	r5, .L29
 500 0004 C300     		lsls	r3, r0, #3
 501 0006 1C1A     		subs	r4, r3, r0
 502 0008 A200     		lsls	r2, r4, #2
 503 000a AA18     		adds	r2, r5, r2
 504 000c 5468     		ldr	r4, [r2, #4]
 505              	.LVL65:
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 506              		.loc 1 209 0
 507 000e 9668     		ldr	r6, [r2, #8]
 508              	.LVL66:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 509              		.loc 1 210 0
 510 0010 8A00     		lsls	r2, r1, #2
 511 0012 5218     		adds	r2, r2, r1
 512 0014 5100     		lsls	r1, r2, #1
 513              	.LVL67:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 41


 514 0016 7118     		adds	r1, r6, r1
 515              	.LVL68:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 516              		.loc 1 211 0
 517 0018 1B1A     		subs	r3, r3, r0
 518 001a 9A00     		lsls	r2, r3, #2
 519 001c AA18     		adds	r2, r5, r2
 520 001e 927E     		ldrb	r2, [r2, #26]
 521 0020 2000     		movs	r0, r4
 522              	.LVL69:
 523 0022 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 524              	.LVL70:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 525              		.loc 1 222 0
 526              		@ sp needed
 527              	.LVL71:
 528              	.LVL72:
 529              	.LVL73:
 530 0026 70BD     		pop	{r4, r5, r6, pc}
 531              	.L30:
 532              		.align	2
 533              	.L29:
 534 0028 00000000 		.word	CapSense_dsFlash
 535              		.cfi_endproc
 536              	.LFE39:
 537              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 538              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 539              		.align	2
 540              		.global	CapSense_UpdateWidgetBaseline
 541              		.code	16
 542              		.thumb_func
 543              		.type	CapSense_UpdateWidgetBaseline, %function
 544              	CapSense_UpdateWidgetBaseline:
 545              	.LFB38:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 546              		.loc 1 144 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL74:
 551 0000 70B5     		push	{r4, r5, r6, lr}
 552              		.cfi_def_cfa_offset 16
 553              		.cfi_offset 4, -16
 554              		.cfi_offset 5, -12
 555              		.cfi_offset 6, -8
 556              		.cfi_offset 14, -4
 557 0002 0600     		movs	r6, r0
 558              	.LVL75:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 559              		.loc 1 152 0
 560 0004 C200     		lsls	r2, r0, #3
 561 0006 121A     		subs	r2, r2, r0
 562 0008 9300     		lsls	r3, r2, #2
 563 000a 084A     		ldr	r2, .L34
 564 000c D318     		adds	r3, r2, r3
 565 000e 1B8B     		ldrh	r3, [r3, #24]
 566              	.LVL76:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 42


 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 567              		.loc 1 149 0
 568 0010 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 569              		.loc 1 154 0
 570 0012 05E0     		b	.L32
 571              	.LVL77:
 572              	.L33:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 573              		.loc 1 156 0
 574 0014 2100     		movs	r1, r4
 575 0016 3000     		movs	r0, r6
 576 0018 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 577              	.LVL78:
 578 001c 0543     		orrs	r5, r0
 579              	.LVL79:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 580              		.loc 1 154 0
 581 001e 2300     		movs	r3, r4
 582              	.LVL80:
 583              	.L32:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 584              		.loc 1 154 0 is_stmt 0 discriminator 1
 585 0020 5C1E     		subs	r4, r3, #1
 586              	.LVL81:
 587 0022 002B     		cmp	r3, #0
 588 0024 F6D1     		bne	.L33
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 589              		.loc 1 160 0 is_stmt 1
 590 0026 2800     		movs	r0, r5
 591              		@ sp needed
 592              	.LVL82:
 593              	.LVL83:
 594              	.LVL84:
 595 0028 70BD     		pop	{r4, r5, r6, pc}
 596              	.L35:
 597 002a C046     		.align	2
 598              	.L34:
 599 002c 00000000 		.word	CapSense_dsFlash
 600              		.cfi_endproc
 601              	.LFE38:
 602              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 603              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 604              		.align	2
 605              		.global	CapSense_UpdateAllBaselines
 606              		.code	16
 607              		.thumb_func
 608              		.type	CapSense_UpdateAllBaselines, %function
 609              	CapSense_UpdateAllBaselines:
 610              	.LFB37:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 611              		.loc 1 99 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615 0000 70B5     		push	{r4, r5, r6, lr}
 616              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 43


 617              		.cfi_offset 4, -16
 618              		.cfi_offset 5, -12
 619              		.cfi_offset 6, -8
 620              		.cfi_offset 14, -4
 621              	.LVL85:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 622              		.loc 1 101 0
 623 0002 0025     		movs	r5, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 624              		.loc 1 103 0
 625 0004 0A23     		movs	r3, #10
 626 0006 04E0     		b	.L37
 627              	.LVL86:
 628              	.L38:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 629              		.loc 1 105 0
 630 0008 2000     		movs	r0, r4
 631 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 632              	.LVL87:
 633 000e 0543     		orrs	r5, r0
 634              	.LVL88:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 635              		.loc 1 103 0
 636 0010 2300     		movs	r3, r4
 637              	.LVL89:
 638              	.L37:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 639              		.loc 1 103 0 is_stmt 0 discriminator 1
 640 0012 5C1E     		subs	r4, r3, #1
 641              	.LVL90:
 642 0014 002B     		cmp	r3, #0
 643 0016 F7D1     		bne	.L38
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 644              		.loc 1 109 0 is_stmt 1
 645 0018 2800     		movs	r0, r5
 646              		@ sp needed
 647              	.LVL91:
 648              	.LVL92:
 649 001a 70BD     		pop	{r4, r5, r6, pc}
 650              		.cfi_endproc
 651              	.LFE37:
 652              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 653              		.text
 654              	.Letext0:
 655              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 656              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 657              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 658              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 659              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 660              		.section	.debug_info,"",%progbits
 661              	.Ldebug_info0:
 662 0000 E7070000 		.4byte	0x7e7
 663 0004 0400     		.2byte	0x4
 664 0006 00000000 		.4byte	.Ldebug_abbrev0
 665 000a 04       		.byte	0x4
 666 000b 01       		.uleb128 0x1
 667 000c E0000000 		.4byte	.LASF90
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 44


 668 0010 0C       		.byte	0xc
 669 0011 F5020000 		.4byte	.LASF91
 670 0015 BC010000 		.4byte	.LASF92
 671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 672 001d 00000000 		.4byte	0
 673 0021 00000000 		.4byte	.Ldebug_line0
 674 0025 02       		.uleb128 0x2
 675 0026 04       		.byte	0x4
 676 0027 05       		.byte	0x5
 677 0028 696E7400 		.ascii	"int\000"
 678 002c 03       		.uleb128 0x3
 679 002d 04       		.byte	0x4
 680 002e 07       		.byte	0x7
 681 002f 07040000 		.4byte	.LASF0
 682 0033 03       		.uleb128 0x3
 683 0034 08       		.byte	0x8
 684 0035 05       		.byte	0x5
 685 0036 CA020000 		.4byte	.LASF1
 686 003a 03       		.uleb128 0x3
 687 003b 08       		.byte	0x8
 688 003c 04       		.byte	0x4
 689 003d A0030000 		.4byte	.LASF2
 690 0041 03       		.uleb128 0x3
 691 0042 01       		.byte	0x1
 692 0043 06       		.byte	0x6
 693 0044 CE030000 		.4byte	.LASF3
 694 0048 04       		.uleb128 0x4
 695 0049 4D030000 		.4byte	.LASF6
 696 004d 02       		.byte	0x2
 697 004e 1D       		.byte	0x1d
 698 004f 53000000 		.4byte	0x53
 699 0053 03       		.uleb128 0x3
 700 0054 01       		.byte	0x1
 701 0055 08       		.byte	0x8
 702 0056 AC030000 		.4byte	.LASF4
 703 005a 03       		.uleb128 0x3
 704 005b 02       		.byte	0x2
 705 005c 05       		.byte	0x5
 706 005d 95000000 		.4byte	.LASF5
 707 0061 04       		.uleb128 0x4
 708 0062 B1010000 		.4byte	.LASF7
 709 0066 02       		.byte	0x2
 710 0067 2B       		.byte	0x2b
 711 0068 6C000000 		.4byte	0x6c
 712 006c 03       		.uleb128 0x3
 713 006d 02       		.byte	0x2
 714 006e 07       		.byte	0x7
 715 006f 7B040000 		.4byte	.LASF8
 716 0073 03       		.uleb128 0x3
 717 0074 04       		.byte	0x4
 718 0075 05       		.byte	0x5
 719 0076 DD020000 		.4byte	.LASF9
 720 007a 04       		.uleb128 0x4
 721 007b 91010000 		.4byte	.LASF10
 722 007f 02       		.byte	0x2
 723 0080 41       		.byte	0x41
 724 0081 85000000 		.4byte	0x85
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 45


 725 0085 03       		.uleb128 0x3
 726 0086 04       		.byte	0x4
 727 0087 07       		.byte	0x7
 728 0088 5F050000 		.4byte	.LASF11
 729 008c 03       		.uleb128 0x3
 730 008d 08       		.byte	0x8
 731 008e 07       		.byte	0x7
 732 008f DA030000 		.4byte	.LASF12
 733 0093 04       		.uleb128 0x4
 734 0094 4E020000 		.4byte	.LASF13
 735 0098 03       		.byte	0x3
 736 0099 18       		.byte	0x18
 737 009a 48000000 		.4byte	0x48
 738 009e 04       		.uleb128 0x4
 739 009f 14040000 		.4byte	.LASF14
 740 00a3 03       		.byte	0x3
 741 00a4 24       		.byte	0x24
 742 00a5 61000000 		.4byte	0x61
 743 00a9 04       		.uleb128 0x4
 744 00aa F1030000 		.4byte	.LASF15
 745 00ae 03       		.byte	0x3
 746 00af 30       		.byte	0x30
 747 00b0 7A000000 		.4byte	0x7a
 748 00b4 03       		.uleb128 0x3
 749 00b5 04       		.byte	0x4
 750 00b6 07       		.byte	0x7
 751 00b7 1E030000 		.4byte	.LASF16
 752 00bb 03       		.uleb128 0x3
 753 00bc 01       		.byte	0x1
 754 00bd 08       		.byte	0x8
 755 00be D8020000 		.4byte	.LASF17
 756 00c2 03       		.uleb128 0x3
 757 00c3 04       		.byte	0x4
 758 00c4 04       		.byte	0x4
 759 00c5 C4020000 		.4byte	.LASF18
 760 00c9 03       		.uleb128 0x3
 761 00ca 08       		.byte	0x8
 762 00cb 04       		.byte	0x4
 763 00cc 76050000 		.4byte	.LASF19
 764 00d0 05       		.uleb128 0x5
 765 00d1 C4030000 		.4byte	.LASF20
 766 00d5 04       		.byte	0x4
 767 00d6 8203     		.2byte	0x382
 768 00d8 A9000000 		.4byte	0xa9
 769 00dc 05       		.uleb128 0x5
 770 00dd 56020000 		.4byte	.LASF21
 771 00e1 04       		.byte	0x4
 772 00e2 8503     		.2byte	0x385
 773 00e4 93000000 		.4byte	0x93
 774 00e8 05       		.uleb128 0x5
 775 00e9 19020000 		.4byte	.LASF22
 776 00ed 04       		.byte	0x4
 777 00ee 8603     		.2byte	0x386
 778 00f0 9E000000 		.4byte	0x9e
 779 00f4 05       		.uleb128 0x5
 780 00f5 58050000 		.4byte	.LASF23
 781 00f9 04       		.byte	0x4
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 46


 782 00fa 8703     		.2byte	0x387
 783 00fc A9000000 		.4byte	0xa9
 784 0100 04       		.uleb128 0x4
 785 0101 27030000 		.4byte	.LASF24
 786 0105 05       		.byte	0x5
 787 0106 FC       		.byte	0xfc
 788 0107 E8000000 		.4byte	0xe8
 789 010b 05       		.uleb128 0x5
 790 010c 16000000 		.4byte	.LASF25
 791 0110 05       		.byte	0x5
 792 0111 0001     		.2byte	0x100
 793 0113 DC000000 		.4byte	0xdc
 794 0117 06       		.uleb128 0x6
 795 0118 01       		.byte	0x1
 796 0119 53000000 		.4byte	0x53
 797 011d 06       		.byte	0x6
 798 011e 61       		.byte	0x61
 799 011f 48010000 		.4byte	0x148
 800 0123 07       		.uleb128 0x7
 801 0124 FC010000 		.4byte	.LASF26
 802 0128 01       		.byte	0x1
 803 0129 07       		.uleb128 0x7
 804 012a 5F040000 		.4byte	.LASF27
 805 012e 02       		.byte	0x2
 806 012f 07       		.uleb128 0x7
 807 0130 33050000 		.4byte	.LASF28
 808 0134 03       		.byte	0x3
 809 0135 07       		.uleb128 0x7
 810 0136 A6050000 		.4byte	.LASF29
 811 013a 04       		.byte	0x4
 812 013b 07       		.uleb128 0x7
 813 013c A5000000 		.4byte	.LASF30
 814 0140 05       		.byte	0x5
 815 0141 07       		.uleb128 0x7
 816 0142 AC020000 		.4byte	.LASF31
 817 0146 06       		.byte	0x6
 818 0147 00       		.byte	0
 819 0148 04       		.uleb128 0x4
 820 0149 85050000 		.4byte	.LASF32
 821 014d 06       		.byte	0x6
 822 014e 68       		.byte	0x68
 823 014f 17010000 		.4byte	0x117
 824 0153 08       		.uleb128 0x8
 825 0154 0E       		.byte	0xe
 826 0155 06       		.byte	0x6
 827 0156 8C       		.byte	0x8c
 828 0157 D4010000 		.4byte	0x1d4
 829 015b 09       		.uleb128 0x9
 830 015c DE040000 		.4byte	.LASF33
 831 0160 06       		.byte	0x6
 832 0161 92       		.byte	0x92
 833 0162 E8000000 		.4byte	0xe8
 834 0166 00       		.byte	0
 835 0167 09       		.uleb128 0x9
 836 0168 62030000 		.4byte	.LASF34
 837 016c 06       		.byte	0x6
 838 016d 97       		.byte	0x97
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 47


 839 016e 00010000 		.4byte	0x100
 840 0172 02       		.byte	0x2
 841 0173 09       		.uleb128 0x9
 842 0174 11020000 		.4byte	.LASF35
 843 0178 06       		.byte	0x6
 844 0179 9C       		.byte	0x9c
 845 017a DC000000 		.4byte	0xdc
 846 017e 04       		.byte	0x4
 847 017f 09       		.uleb128 0x9
 848 0180 72010000 		.4byte	.LASF36
 849 0184 06       		.byte	0x6
 850 0185 A1       		.byte	0xa1
 851 0186 DC000000 		.4byte	0xdc
 852 018a 05       		.byte	0x5
 853 018b 09       		.uleb128 0x9
 854 018c 95030000 		.4byte	.LASF37
 855 0190 06       		.byte	0x6
 856 0191 A6       		.byte	0xa6
 857 0192 DC000000 		.4byte	0xdc
 858 0196 06       		.byte	0x6
 859 0197 09       		.uleb128 0x9
 860 0198 57030000 		.4byte	.LASF38
 861 019c 06       		.byte	0x6
 862 019d AB       		.byte	0xab
 863 019e DC000000 		.4byte	0xdc
 864 01a2 07       		.byte	0x7
 865 01a3 09       		.uleb128 0x9
 866 01a4 51000000 		.4byte	.LASF39
 867 01a8 06       		.byte	0x6
 868 01a9 B2       		.byte	0xb2
 869 01aa 0B010000 		.4byte	0x10b
 870 01ae 08       		.byte	0x8
 871 01af 09       		.uleb128 0x9
 872 01b0 8D000000 		.4byte	.LASF40
 873 01b4 06       		.byte	0x6
 874 01b5 BA       		.byte	0xba
 875 01b6 D4010000 		.4byte	0x1d4
 876 01ba 09       		.byte	0x9
 877 01bb 09       		.uleb128 0x9
 878 01bc 69020000 		.4byte	.LASF41
 879 01c0 06       		.byte	0x6
 880 01c1 C3       		.byte	0xc3
 881 01c2 E8000000 		.4byte	0xe8
 882 01c6 0A       		.byte	0xa
 883 01c7 09       		.uleb128 0x9
 884 01c8 A4010000 		.4byte	.LASF42
 885 01cc 06       		.byte	0x6
 886 01cd C8       		.byte	0xc8
 887 01ce DC000000 		.4byte	0xdc
 888 01d2 0C       		.byte	0xc
 889 01d3 00       		.byte	0
 890 01d4 0A       		.uleb128 0xa
 891 01d5 DC000000 		.4byte	0xdc
 892 01d9 E4010000 		.4byte	0x1e4
 893 01dd 0B       		.uleb128 0xb
 894 01de B4000000 		.4byte	0xb4
 895 01e2 00       		.byte	0
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 48


 896 01e3 00       		.byte	0
 897 01e4 04       		.uleb128 0x4
 898 01e5 1A060000 		.4byte	.LASF43
 899 01e9 06       		.byte	0x6
 900 01ea C9       		.byte	0xc9
 901 01eb 53010000 		.4byte	0x153
 902 01ef 0C       		.uleb128 0xc
 903 01f0 0A       		.byte	0xa
 904 01f1 06       		.byte	0x6
 905 01f2 4A01     		.2byte	0x14a
 906 01f4 3A020000 		.4byte	0x23a
 907 01f8 0D       		.uleb128 0xd
 908 01f9 72617700 		.ascii	"raw\000"
 909 01fd 06       		.byte	0x6
 910 01fe 4F01     		.2byte	0x14f
 911 0200 3A020000 		.4byte	0x23a
 912 0204 00       		.byte	0
 913 0205 0E       		.uleb128 0xe
 914 0206 38000000 		.4byte	.LASF44
 915 020a 06       		.byte	0x6
 916 020b 5401     		.2byte	0x154
 917 020d 3A020000 		.4byte	0x23a
 918 0211 02       		.byte	0x2
 919 0212 0E       		.uleb128 0xe
 920 0213 7D050000 		.4byte	.LASF45
 921 0217 06       		.byte	0x6
 922 0218 5A01     		.2byte	0x15a
 923 021a D4010000 		.4byte	0x1d4
 924 021e 04       		.byte	0x4
 925 021f 0E       		.uleb128 0xe
 926 0220 5C000000 		.4byte	.LASF46
 927 0224 06       		.byte	0x6
 928 0225 5F01     		.2byte	0x15f
 929 0227 00010000 		.4byte	0x100
 930 022b 06       		.byte	0x6
 931 022c 0E       		.uleb128 0xe
 932 022d 3F030000 		.4byte	.LASF47
 933 0231 06       		.byte	0x6
 934 0232 6401     		.2byte	0x164
 935 0234 4A020000 		.4byte	0x24a
 936 0238 08       		.byte	0x8
 937 0239 00       		.byte	0
 938 023a 0A       		.uleb128 0xa
 939 023b E8000000 		.4byte	0xe8
 940 023f 4A020000 		.4byte	0x24a
 941 0243 0B       		.uleb128 0xb
 942 0244 B4000000 		.4byte	0xb4
 943 0248 00       		.byte	0
 944 0249 00       		.byte	0
 945 024a 0A       		.uleb128 0xa
 946 024b 0B010000 		.4byte	0x10b
 947 024f 5A020000 		.4byte	0x25a
 948 0253 0B       		.uleb128 0xb
 949 0254 B4000000 		.4byte	0xb4
 950 0258 00       		.byte	0
 951 0259 00       		.byte	0
 952 025a 05       		.uleb128 0x5
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 49


 953 025b 29040000 		.4byte	.LASF48
 954 025f 06       		.byte	0x6
 955 0260 6501     		.2byte	0x165
 956 0262 EF010000 		.4byte	0x1ef
 957 0266 0C       		.uleb128 0xc
 958 0267 1C       		.byte	0x1c
 959 0268 06       		.byte	0x6
 960 0269 4B02     		.2byte	0x24b
 961 026b E5020000 		.4byte	0x2e5
 962 026f 0E       		.uleb128 0xe
 963 0270 36060000 		.4byte	.LASF49
 964 0274 06       		.byte	0x6
 965 0275 5402     		.2byte	0x254
 966 0277 E5020000 		.4byte	0x2e5
 967 027b 00       		.byte	0
 968 027c 0E       		.uleb128 0xe
 969 027d 19050000 		.4byte	.LASF50
 970 0281 06       		.byte	0x6
 971 0282 5B02     		.2byte	0x25b
 972 0284 EC020000 		.4byte	0x2ec
 973 0288 04       		.byte	0x4
 974 0289 0E       		.uleb128 0xe
 975 028a C2050000 		.4byte	.LASF51
 976 028e 06       		.byte	0x6
 977 028f 6102     		.2byte	0x261
 978 0291 EE020000 		.4byte	0x2ee
 979 0295 08       		.byte	0x8
 980 0296 0E       		.uleb128 0xe
 981 0297 EF050000 		.4byte	.LASF52
 982 029b 06       		.byte	0x6
 983 029c 6602     		.2byte	0x266
 984 029e EC020000 		.4byte	0x2ec
 985 02a2 0C       		.byte	0xc
 986 02a3 0E       		.uleb128 0xe
 987 02a4 3E020000 		.4byte	.LASF53
 988 02a8 06       		.byte	0x6
 989 02a9 6D02     		.2byte	0x26d
 990 02ab F4020000 		.4byte	0x2f4
 991 02af 10       		.byte	0x10
 992 02b0 0E       		.uleb128 0xe
 993 02b1 FA030000 		.4byte	.LASF54
 994 02b5 06       		.byte	0x6
 995 02b6 7202     		.2byte	0x272
 996 02b8 F4000000 		.4byte	0xf4
 997 02bc 14       		.byte	0x14
 998 02bd 0E       		.uleb128 0xe
 999 02be 61000000 		.4byte	.LASF55
 1000 02c2 06       		.byte	0x6
 1001 02c3 7902     		.2byte	0x279
 1002 02c5 E8000000 		.4byte	0xe8
 1003 02c9 18       		.byte	0x18
 1004 02ca 0E       		.uleb128 0xe
 1005 02cb EC020000 		.4byte	.LASF56
 1006 02cf 06       		.byte	0x6
 1007 02d0 8402     		.2byte	0x284
 1008 02d2 DC000000 		.4byte	0xdc
 1009 02d6 1A       		.byte	0x1a
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 50


 1010 02d7 0E       		.uleb128 0xe
 1011 02d8 6B030000 		.4byte	.LASF57
 1012 02dc 06       		.byte	0x6
 1013 02dd 8C02     		.2byte	0x28c
 1014 02df DC000000 		.4byte	0xdc
 1015 02e3 1B       		.byte	0x1b
 1016 02e4 00       		.byte	0
 1017 02e5 0F       		.uleb128 0xf
 1018 02e6 04       		.byte	0x4
 1019 02e7 EB020000 		.4byte	0x2eb
 1020 02eb 10       		.uleb128 0x10
 1021 02ec 11       		.uleb128 0x11
 1022 02ed 04       		.byte	0x4
 1023 02ee 0F       		.uleb128 0xf
 1024 02ef 04       		.byte	0x4
 1025 02f0 5A020000 		.4byte	0x25a
 1026 02f4 0F       		.uleb128 0xf
 1027 02f5 04       		.byte	0x4
 1028 02f6 DC000000 		.4byte	0xdc
 1029 02fa 05       		.uleb128 0x5
 1030 02fb BC000000 		.4byte	.LASF58
 1031 02ff 06       		.byte	0x6
 1032 0300 8D02     		.2byte	0x28d
 1033 0302 66020000 		.4byte	0x266
 1034 0306 12       		.uleb128 0x12
 1035 0307 1801     		.2byte	0x118
 1036 0309 06       		.byte	0x6
 1037 030a 9302     		.2byte	0x293
 1038 030c 1E030000 		.4byte	0x31e
 1039 0310 0E       		.uleb128 0xe
 1040 0311 FF050000 		.4byte	.LASF59
 1041 0315 06       		.byte	0x6
 1042 0316 9802     		.2byte	0x298
 1043 0318 1E030000 		.4byte	0x31e
 1044 031c 00       		.byte	0
 1045 031d 00       		.byte	0
 1046 031e 0A       		.uleb128 0xa
 1047 031f FA020000 		.4byte	0x2fa
 1048 0323 2E030000 		.4byte	0x32e
 1049 0327 0B       		.uleb128 0xb
 1050 0328 B4000000 		.4byte	0xb4
 1051 032c 09       		.byte	0x9
 1052 032d 00       		.byte	0
 1053 032e 05       		.uleb128 0x5
 1054 032f 00000000 		.4byte	.LASF60
 1055 0333 06       		.byte	0x6
 1056 0334 9902     		.2byte	0x299
 1057 0336 06030000 		.4byte	0x306
 1058 033a 13       		.uleb128 0x13
 1059 033b AA040000 		.4byte	.LASF93
 1060 033f 01       		.byte	0x1
 1061 0340 3F       		.byte	0x3f
 1062 0341 00000000 		.4byte	.LFB36
 1063 0345 02000000 		.4byte	.LFE36-.LFB36
 1064 0349 01       		.uleb128 0x1
 1065 034a 9C       		.byte	0x9c
 1066 034b 14       		.uleb128 0x14
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 51


 1067 034c 70020000 		.4byte	.LASF64
 1068 0350 01       		.byte	0x1
 1069 0351 2A02     		.2byte	0x22a
 1070 0353 00000000 		.4byte	.LFB45
 1071 0357 1E000000 		.4byte	.LFE45-.LFB45
 1072 035b 01       		.uleb128 0x1
 1073 035c 9C       		.byte	0x9c
 1074 035d 90030000 		.4byte	0x390
 1075 0361 15       		.uleb128 0x15
 1076 0362 43060000 		.4byte	.LASF61
 1077 0366 01       		.byte	0x1
 1078 0367 2A02     		.2byte	0x22a
 1079 0369 EE020000 		.4byte	0x2ee
 1080 036d 01       		.uleb128 0x1
 1081 036e 50       		.byte	0x50
 1082 036f 16       		.uleb128 0x16
 1083 0370 7B010000 		.4byte	.LASF62
 1084 0374 01       		.byte	0x1
 1085 0375 2A02     		.2byte	0x22a
 1086 0377 F4000000 		.4byte	0xf4
 1087 037b 00000000 		.4byte	.LLST0
 1088 037f 16       		.uleb128 0x16
 1089 0380 E9040000 		.4byte	.LASF63
 1090 0384 01       		.byte	0x1
 1091 0385 2A02     		.2byte	0x22a
 1092 0387 F4000000 		.4byte	0xf4
 1093 038b 21000000 		.4byte	.LLST1
 1094 038f 00       		.byte	0
 1095 0390 14       		.uleb128 0x14
 1096 0391 C0040000 		.4byte	.LASF65
 1097 0395 01       		.byte	0x1
 1098 0396 0F02     		.2byte	0x20f
 1099 0398 00000000 		.4byte	.LFB44
 1100 039c 1E000000 		.4byte	.LFE44-.LFB44
 1101 03a0 01       		.uleb128 0x1
 1102 03a1 9C       		.byte	0x9c
 1103 03a2 F3030000 		.4byte	0x3f3
 1104 03a6 16       		.uleb128 0x16
 1105 03a7 43060000 		.4byte	.LASF61
 1106 03ab 01       		.byte	0x1
 1107 03ac 0F02     		.2byte	0x20f
 1108 03ae EE020000 		.4byte	0x2ee
 1109 03b2 42000000 		.4byte	.LLST2
 1110 03b6 16       		.uleb128 0x16
 1111 03b7 7B010000 		.4byte	.LASF62
 1112 03bb 01       		.byte	0x1
 1113 03bc 0F02     		.2byte	0x20f
 1114 03be F4000000 		.4byte	0xf4
 1115 03c2 6E000000 		.4byte	.LLST3
 1116 03c6 17       		.uleb128 0x17
 1117 03c7 1D040000 		.4byte	.LASF69
 1118 03cb 01       		.byte	0x1
 1119 03cc 1102     		.2byte	0x211
 1120 03ce F4000000 		.4byte	0xf4
 1121 03d2 9A000000 		.4byte	.LLST4
 1122 03d6 18       		.uleb128 0x18
 1123 03d7 14000000 		.4byte	.LVL6
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 52


 1124 03db 4B030000 		.4byte	0x34b
 1125 03df 19       		.uleb128 0x19
 1126 03e0 01       		.uleb128 0x1
 1127 03e1 50       		.byte	0x50
 1128 03e2 02       		.uleb128 0x2
 1129 03e3 76       		.byte	0x76
 1130 03e4 00       		.sleb128 0
 1131 03e5 19       		.uleb128 0x19
 1132 03e6 01       		.uleb128 0x1
 1133 03e7 51       		.byte	0x51
 1134 03e8 02       		.uleb128 0x2
 1135 03e9 75       		.byte	0x75
 1136 03ea 00       		.sleb128 0
 1137 03eb 19       		.uleb128 0x19
 1138 03ec 01       		.uleb128 0x1
 1139 03ed 52       		.byte	0x52
 1140 03ee 02       		.uleb128 0x2
 1141 03ef 74       		.byte	0x74
 1142 03f0 00       		.sleb128 0
 1143 03f1 00       		.byte	0
 1144 03f2 00       		.byte	0
 1145 03f3 14       		.uleb128 0x14
 1146 03f4 73030000 		.4byte	.LASF66
 1147 03f8 01       		.byte	0x1
 1148 03f9 F301     		.2byte	0x1f3
 1149 03fb 00000000 		.4byte	.LFB43
 1150 03ff 2C000000 		.4byte	.LFE43-.LFB43
 1151 0403 01       		.uleb128 0x1
 1152 0404 9C       		.byte	0x9c
 1153 0405 7B040000 		.4byte	0x47b
 1154 0409 16       		.uleb128 0x16
 1155 040a 4F050000 		.4byte	.LASF67
 1156 040e 01       		.byte	0x1
 1157 040f F301     		.2byte	0x1f3
 1158 0411 F4000000 		.4byte	0xf4
 1159 0415 DC000000 		.4byte	.LLST5
 1160 0419 16       		.uleb128 0x16
 1161 041a 3D000000 		.4byte	.LASF68
 1162 041e 01       		.byte	0x1
 1163 041f F301     		.2byte	0x1f3
 1164 0421 F4000000 		.4byte	0xf4
 1165 0425 FD000000 		.4byte	.LLST6
 1166 0429 17       		.uleb128 0x17
 1167 042a 43060000 		.4byte	.LASF61
 1168 042e 01       		.byte	0x1
 1169 042f F501     		.2byte	0x1f5
 1170 0431 EE020000 		.4byte	0x2ee
 1171 0435 1E010000 		.4byte	.LLST7
 1172 0439 1A       		.uleb128 0x1a
 1173 043a BA030000 		.4byte	.LASF72
 1174 043e 01       		.byte	0x1
 1175 043f F601     		.2byte	0x1f6
 1176 0441 7B040000 		.4byte	0x47b
 1177 0445 18       		.uleb128 0x18
 1178 0446 24000000 		.4byte	.LVL18
 1179 044a 90030000 		.4byte	0x390
 1180 044e 19       		.uleb128 0x19
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 53


 1181 044f 01       		.uleb128 0x1
 1182 0450 50       		.byte	0x50
 1183 0451 0E       		.uleb128 0xe
 1184 0452 F3       		.byte	0xf3
 1185 0453 01       		.uleb128 0x1
 1186 0454 51       		.byte	0x51
 1187 0455 32       		.byte	0x32
 1188 0456 24       		.byte	0x24
 1189 0457 F3       		.byte	0xf3
 1190 0458 01       		.uleb128 0x1
 1191 0459 51       		.byte	0x51
 1192 045a 22       		.byte	0x22
 1193 045b 31       		.byte	0x31
 1194 045c 24       		.byte	0x24
 1195 045d 75       		.byte	0x75
 1196 045e 00       		.sleb128 0
 1197 045f 22       		.byte	0x22
 1198 0460 19       		.uleb128 0x19
 1199 0461 01       		.uleb128 0x1
 1200 0462 51       		.byte	0x51
 1201 0463 15       		.uleb128 0x15
 1202 0464 F3       		.byte	0xf3
 1203 0465 01       		.uleb128 0x1
 1204 0466 50       		.byte	0x50
 1205 0467 33       		.byte	0x33
 1206 0468 24       		.byte	0x24
 1207 0469 F3       		.byte	0xf3
 1208 046a 01       		.uleb128 0x1
 1209 046b 50       		.byte	0x50
 1210 046c 1C       		.byte	0x1c
 1211 046d 32       		.byte	0x32
 1212 046e 24       		.byte	0x24
 1213 046f 74       		.byte	0x74
 1214 0470 00       		.sleb128 0
 1215 0471 22       		.byte	0x22
 1216 0472 23       		.byte	0x23
 1217 0473 1A       		.uleb128 0x1a
 1218 0474 94       		.byte	0x94
 1219 0475 01       		.byte	0x1
 1220 0476 08       		.byte	0x8
 1221 0477 FF       		.byte	0xff
 1222 0478 1A       		.byte	0x1a
 1223 0479 00       		.byte	0
 1224 047a 00       		.byte	0
 1225 047b 0F       		.uleb128 0xf
 1226 047c 04       		.byte	0x4
 1227 047d 81040000 		.4byte	0x481
 1228 0481 1B       		.uleb128 0x1b
 1229 0482 FA020000 		.4byte	0x2fa
 1230 0486 14       		.uleb128 0x14
 1231 0487 CD050000 		.4byte	.LASF70
 1232 048b 01       		.byte	0x1
 1233 048c C701     		.2byte	0x1c7
 1234 048e 00000000 		.4byte	.LFB42
 1235 0492 28000000 		.4byte	.LFE42-.LFB42
 1236 0496 01       		.uleb128 0x1
 1237 0497 9C       		.byte	0x9c
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 54


 1238 0498 EF040000 		.4byte	0x4ef
 1239 049c 16       		.uleb128 0x16
 1240 049d 4F050000 		.4byte	.LASF67
 1241 04a1 01       		.byte	0x1
 1242 04a2 C701     		.2byte	0x1c7
 1243 04a4 F4000000 		.4byte	0xf4
 1244 04a8 61010000 		.4byte	.LLST8
 1245 04ac 17       		.uleb128 0x17
 1246 04ad 3D000000 		.4byte	.LASF68
 1247 04b1 01       		.byte	0x1
 1248 04b2 C901     		.2byte	0x1c9
 1249 04b4 F4000000 		.4byte	0xf4
 1250 04b8 8D010000 		.4byte	.LLST9
 1251 04bc 17       		.uleb128 0x17
 1252 04bd 0B050000 		.4byte	.LASF71
 1253 04c1 01       		.byte	0x1
 1254 04c2 CA01     		.2byte	0x1ca
 1255 04c4 F4000000 		.4byte	0xf4
 1256 04c8 CE010000 		.4byte	.LLST10
 1257 04cc 1A       		.uleb128 0x1a
 1258 04cd BA030000 		.4byte	.LASF72
 1259 04d1 01       		.byte	0x1
 1260 04d2 CC01     		.2byte	0x1cc
 1261 04d4 7B040000 		.4byte	0x47b
 1262 04d8 18       		.uleb128 0x18
 1263 04d9 1A000000 		.4byte	.LVL24
 1264 04dd F3030000 		.4byte	0x3f3
 1265 04e1 19       		.uleb128 0x19
 1266 04e2 01       		.uleb128 0x1
 1267 04e3 50       		.byte	0x50
 1268 04e4 02       		.uleb128 0x2
 1269 04e5 75       		.byte	0x75
 1270 04e6 00       		.sleb128 0
 1271 04e7 19       		.uleb128 0x19
 1272 04e8 01       		.uleb128 0x1
 1273 04e9 51       		.byte	0x51
 1274 04ea 02       		.uleb128 0x2
 1275 04eb 74       		.byte	0x74
 1276 04ec 00       		.sleb128 0
 1277 04ed 00       		.byte	0
 1278 04ee 00       		.byte	0
 1279 04ef 14       		.uleb128 0x14
 1280 04f0 6D000000 		.4byte	.LASF73
 1281 04f4 01       		.byte	0x1
 1282 04f5 A301     		.2byte	0x1a3
 1283 04f7 00000000 		.4byte	.LFB41
 1284 04fb 16000000 		.4byte	.LFE41-.LFB41
 1285 04ff 01       		.uleb128 0x1
 1286 0500 9C       		.byte	0x9c
 1287 0501 26050000 		.4byte	0x526
 1288 0505 17       		.uleb128 0x17
 1289 0506 4F050000 		.4byte	.LASF67
 1290 050a 01       		.byte	0x1
 1291 050b A501     		.2byte	0x1a5
 1292 050d F4000000 		.4byte	0xf4
 1293 0511 E1010000 		.4byte	.LLST11
 1294 0515 18       		.uleb128 0x18
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 55


 1295 0516 0C000000 		.4byte	.LVL31
 1296 051a 86040000 		.4byte	0x486
 1297 051e 19       		.uleb128 0x19
 1298 051f 01       		.uleb128 0x1
 1299 0520 50       		.byte	0x50
 1300 0521 02       		.uleb128 0x2
 1301 0522 74       		.byte	0x74
 1302 0523 00       		.sleb128 0
 1303 0524 00       		.byte	0
 1304 0525 00       		.byte	0
 1305 0526 1C       		.uleb128 0x1c
 1306 0527 95020000 		.4byte	.LASF78
 1307 052b 01       		.byte	0x1
 1308 052c A506     		.2byte	0x6a5
 1309 052e F4000000 		.4byte	0xf4
 1310 0532 00000000 		.4byte	.LFB46
 1311 0536 12000000 		.4byte	.LFE46-.LFB46
 1312 053a 01       		.uleb128 0x1
 1313 053b 9C       		.byte	0x9c
 1314 053c 8D050000 		.4byte	0x58d
 1315 0540 16       		.uleb128 0x16
 1316 0541 9F000000 		.4byte	.LASF74
 1317 0545 01       		.byte	0x1
 1318 0546 A506     		.2byte	0x6a5
 1319 0548 F4000000 		.4byte	0xf4
 1320 054c 23020000 		.4byte	.LLST12
 1321 0550 16       		.uleb128 0x16
 1322 0551 9B050000 		.4byte	.LASF75
 1323 0555 01       		.byte	0x1
 1324 0556 A506     		.2byte	0x6a5
 1325 0558 F4000000 		.4byte	0xf4
 1326 055c 44020000 		.4byte	.LLST13
 1327 0560 1D       		.uleb128 0x1d
 1328 0561 6E00     		.ascii	"n\000"
 1329 0563 01       		.byte	0x1
 1330 0564 A506     		.2byte	0x6a5
 1331 0566 F4000000 		.4byte	0xf4
 1332 056a 65020000 		.4byte	.LLST14
 1333 056e 16       		.uleb128 0x16
 1334 056f E6020000 		.4byte	.LASF76
 1335 0573 01       		.byte	0x1
 1336 0574 A506     		.2byte	0x6a5
 1337 0576 F4000000 		.4byte	0xf4
 1338 057a 86020000 		.4byte	.LLST15
 1339 057e 1E       		.uleb128 0x1e
 1340 057f 82010000 		.4byte	.LASF77
 1341 0583 01       		.byte	0x1
 1342 0584 A706     		.2byte	0x6a7
 1343 0586 F4000000 		.4byte	0xf4
 1344 058a 01       		.uleb128 0x1
 1345 058b 50       		.byte	0x50
 1346 058c 00       		.byte	0
 1347 058d 1F       		.uleb128 0x1f
 1348 058e F1040000 		.4byte	.LASF79
 1349 0592 01       		.byte	0x1
 1350 0593 FF       		.byte	0xff
 1351 0594 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 56


 1352 0598 00000000 		.4byte	.LFB40
 1353 059c A0000000 		.4byte	.LFE40-.LFB40
 1354 05a0 01       		.uleb128 0x1
 1355 05a1 9C       		.byte	0x9c
 1356 05a2 69060000 		.4byte	0x669
 1357 05a6 16       		.uleb128 0x16
 1358 05a7 5C020000 		.4byte	.LASF80
 1359 05ab 01       		.byte	0x1
 1360 05ac 0001     		.2byte	0x100
 1361 05ae 69060000 		.4byte	0x669
 1362 05b2 A7020000 		.4byte	.LLST16
 1363 05b6 16       		.uleb128 0x16
 1364 05b7 43060000 		.4byte	.LASF61
 1365 05bb 01       		.byte	0x1
 1366 05bc 0101     		.2byte	0x101
 1367 05be EE020000 		.4byte	0x2ee
 1368 05c2 D3020000 		.4byte	.LLST17
 1369 05c6 16       		.uleb128 0x16
 1370 05c7 7B010000 		.4byte	.LASF62
 1371 05cb 01       		.byte	0x1
 1372 05cc 0201     		.2byte	0x102
 1373 05ce F4000000 		.4byte	0xf4
 1374 05d2 FF020000 		.4byte	.LLST18
 1375 05d6 17       		.uleb128 0x17
 1376 05d7 71050000 		.4byte	.LASF81
 1377 05db 01       		.byte	0x1
 1378 05dc 0401     		.2byte	0x104
 1379 05de F4000000 		.4byte	0xf4
 1380 05e2 1E030000 		.4byte	.LLST19
 1381 05e6 17       		.uleb128 0x17
 1382 05e7 D5000000 		.4byte	.LASF82
 1383 05eb 01       		.byte	0x1
 1384 05ec 0501     		.2byte	0x105
 1385 05ee F4000000 		.4byte	0xf4
 1386 05f2 54030000 		.4byte	.LLST20
 1387 05f6 17       		.uleb128 0x17
 1388 05f7 1D040000 		.4byte	.LASF69
 1389 05fb 01       		.byte	0x1
 1390 05fc 0601     		.2byte	0x106
 1391 05fe F4000000 		.4byte	0xf4
 1392 0602 7D030000 		.4byte	.LLST21
 1393 0606 17       		.uleb128 0x17
 1394 0607 25050000 		.4byte	.LASF83
 1395 060b 01       		.byte	0x1
 1396 060c 0701     		.2byte	0x107
 1397 060e F4000000 		.4byte	0xf4
 1398 0612 BF030000 		.4byte	.LLST22
 1399 0616 20       		.uleb128 0x20
 1400 0617 31000000 		.4byte	.LASF84
 1401 061b 01       		.byte	0x1
 1402 061c 0801     		.2byte	0x108
 1403 061e F4000000 		.4byte	0xf4
 1404 0622 00       		.byte	0
 1405 0623 17       		.uleb128 0x17
 1406 0624 9C010000 		.4byte	.LASF85
 1407 0628 01       		.byte	0x1
 1408 0629 0B01     		.2byte	0x10b
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 57


 1409 062b F4000000 		.4byte	0xf4
 1410 062f D3030000 		.4byte	.LLST23
 1411 0633 21       		.uleb128 0x21
 1412 0634 4C000000 		.4byte	.LVL50
 1413 0638 4B030000 		.4byte	0x34b
 1414 063c 54060000 		.4byte	0x654
 1415 0640 19       		.uleb128 0x19
 1416 0641 01       		.uleb128 0x1
 1417 0642 50       		.byte	0x50
 1418 0643 02       		.uleb128 0x2
 1419 0644 76       		.byte	0x76
 1420 0645 00       		.sleb128 0
 1421 0646 19       		.uleb128 0x19
 1422 0647 01       		.uleb128 0x1
 1423 0648 51       		.byte	0x51
 1424 0649 03       		.uleb128 0x3
 1425 064a 91       		.byte	0x91
 1426 064b 64       		.sleb128 -28
 1427 064c 06       		.byte	0x6
 1428 064d 19       		.uleb128 0x19
 1429 064e 01       		.uleb128 0x1
 1430 064f 52       		.byte	0x52
 1431 0650 02       		.uleb128 0x2
 1432 0651 74       		.byte	0x74
 1433 0652 00       		.sleb128 0
 1434 0653 00       		.byte	0
 1435 0654 18       		.uleb128 0x18
 1436 0655 82000000 		.4byte	.LVL56
 1437 0659 26050000 		.4byte	0x526
 1438 065d 19       		.uleb128 0x19
 1439 065e 01       		.uleb128 0x1
 1440 065f 52       		.byte	0x52
 1441 0660 01       		.uleb128 0x1
 1442 0661 31       		.byte	0x31
 1443 0662 19       		.uleb128 0x19
 1444 0663 01       		.uleb128 0x1
 1445 0664 53       		.byte	0x53
 1446 0665 01       		.uleb128 0x1
 1447 0666 38       		.byte	0x38
 1448 0667 00       		.byte	0
 1449 0668 00       		.byte	0
 1450 0669 0F       		.uleb128 0xf
 1451 066a 04       		.byte	0x4
 1452 066b E4010000 		.4byte	0x1e4
 1453 066f 1F       		.uleb128 0x1f
 1454 0670 20020000 		.4byte	.LASF86
 1455 0674 01       		.byte	0x1
 1456 0675 C8       		.byte	0xc8
 1457 0676 D0000000 		.4byte	0xd0
 1458 067a 00000000 		.4byte	.LFB39
 1459 067e 2C000000 		.4byte	.LFE39-.LFB39
 1460 0682 01       		.uleb128 0x1
 1461 0683 9C       		.byte	0x9c
 1462 0684 1A070000 		.4byte	0x71a
 1463 0688 22       		.uleb128 0x22
 1464 0689 4F050000 		.4byte	.LASF67
 1465 068d 01       		.byte	0x1
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 58


 1466 068e C8       		.byte	0xc8
 1467 068f F4000000 		.4byte	0xf4
 1468 0693 F1030000 		.4byte	.LLST24
 1469 0697 22       		.uleb128 0x22
 1470 0698 3D000000 		.4byte	.LASF68
 1471 069c 01       		.byte	0x1
 1472 069d C8       		.byte	0xc8
 1473 069e F4000000 		.4byte	0xf4
 1474 06a2 12040000 		.4byte	.LLST25
 1475 06a6 23       		.uleb128 0x23
 1476 06a7 31000000 		.4byte	.LASF84
 1477 06ab 01       		.byte	0x1
 1478 06ac CA       		.byte	0xca
 1479 06ad F4000000 		.4byte	0xf4
 1480 06b1 33040000 		.4byte	.LLST26
 1481 06b5 23       		.uleb128 0x23
 1482 06b6 43060000 		.4byte	.LASF61
 1483 06ba 01       		.byte	0x1
 1484 06bb CC       		.byte	0xcc
 1485 06bc EE020000 		.4byte	0x2ee
 1486 06c0 52040000 		.4byte	.LLST27
 1487 06c4 24       		.uleb128 0x24
 1488 06c5 BA030000 		.4byte	.LASF72
 1489 06c9 01       		.byte	0x1
 1490 06ca CD       		.byte	0xcd
 1491 06cb 7B040000 		.4byte	0x47b
 1492 06cf 23       		.uleb128 0x23
 1493 06d0 5C020000 		.4byte	.LASF80
 1494 06d4 01       		.byte	0x1
 1495 06d5 CE       		.byte	0xce
 1496 06d6 69060000 		.4byte	0x669
 1497 06da 95040000 		.4byte	.LLST28
 1498 06de 18       		.uleb128 0x18
 1499 06df 26000000 		.4byte	.LVL70
 1500 06e3 8D050000 		.4byte	0x58d
 1501 06e7 19       		.uleb128 0x19
 1502 06e8 01       		.uleb128 0x1
 1503 06e9 50       		.byte	0x50
 1504 06ea 02       		.uleb128 0x2
 1505 06eb 74       		.byte	0x74
 1506 06ec 00       		.sleb128 0
 1507 06ed 19       		.uleb128 0x19
 1508 06ee 01       		.uleb128 0x1
 1509 06ef 51       		.byte	0x51
 1510 06f0 0E       		.uleb128 0xe
 1511 06f1 F3       		.byte	0xf3
 1512 06f2 01       		.uleb128 0x1
 1513 06f3 51       		.byte	0x51
 1514 06f4 32       		.byte	0x32
 1515 06f5 24       		.byte	0x24
 1516 06f6 F3       		.byte	0xf3
 1517 06f7 01       		.uleb128 0x1
 1518 06f8 51       		.byte	0x51
 1519 06f9 22       		.byte	0x22
 1520 06fa 31       		.byte	0x31
 1521 06fb 24       		.byte	0x24
 1522 06fc 76       		.byte	0x76
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 59


 1523 06fd 00       		.sleb128 0
 1524 06fe 22       		.byte	0x22
 1525 06ff 19       		.uleb128 0x19
 1526 0700 01       		.uleb128 0x1
 1527 0701 52       		.byte	0x52
 1528 0702 15       		.uleb128 0x15
 1529 0703 F3       		.byte	0xf3
 1530 0704 01       		.uleb128 0x1
 1531 0705 50       		.byte	0x50
 1532 0706 33       		.byte	0x33
 1533 0707 24       		.byte	0x24
 1534 0708 F3       		.byte	0xf3
 1535 0709 01       		.uleb128 0x1
 1536 070a 50       		.byte	0x50
 1537 070b 1C       		.byte	0x1c
 1538 070c 32       		.byte	0x32
 1539 070d 24       		.byte	0x24
 1540 070e 75       		.byte	0x75
 1541 070f 00       		.sleb128 0
 1542 0710 22       		.byte	0x22
 1543 0711 23       		.byte	0x23
 1544 0712 1A       		.uleb128 0x1a
 1545 0713 94       		.byte	0x94
 1546 0714 01       		.byte	0x1
 1547 0715 08       		.byte	0x8
 1548 0716 FF       		.byte	0xff
 1549 0717 1A       		.byte	0x1a
 1550 0718 00       		.byte	0
 1551 0719 00       		.byte	0
 1552 071a 1F       		.uleb128 0x1f
 1553 071b 41040000 		.4byte	.LASF87
 1554 071f 01       		.byte	0x1
 1555 0720 8F       		.byte	0x8f
 1556 0721 D0000000 		.4byte	0xd0
 1557 0725 00000000 		.4byte	.LFB38
 1558 0729 30000000 		.4byte	.LFE38-.LFB38
 1559 072d 01       		.uleb128 0x1
 1560 072e 9C       		.byte	0x9c
 1561 072f 91070000 		.4byte	0x791
 1562 0733 22       		.uleb128 0x22
 1563 0734 4F050000 		.4byte	.LASF67
 1564 0738 01       		.byte	0x1
 1565 0739 8F       		.byte	0x8f
 1566 073a F4000000 		.4byte	0xf4
 1567 073e C2040000 		.4byte	.LLST29
 1568 0742 23       		.uleb128 0x23
 1569 0743 3D000000 		.4byte	.LASF68
 1570 0747 01       		.byte	0x1
 1571 0748 91       		.byte	0x91
 1572 0749 F4000000 		.4byte	0xf4
 1573 074d EE040000 		.4byte	.LLST30
 1574 0751 23       		.uleb128 0x23
 1575 0752 0B050000 		.4byte	.LASF71
 1576 0756 01       		.byte	0x1
 1577 0757 92       		.byte	0x92
 1578 0758 F4000000 		.4byte	0xf4
 1579 075c 2F050000 		.4byte	.LLST31
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 60


 1580 0760 24       		.uleb128 0x24
 1581 0761 BA030000 		.4byte	.LASF72
 1582 0765 01       		.byte	0x1
 1583 0766 94       		.byte	0x94
 1584 0767 7B040000 		.4byte	0x47b
 1585 076b 23       		.uleb128 0x23
 1586 076c 46000000 		.4byte	.LASF88
 1587 0770 01       		.byte	0x1
 1588 0771 95       		.byte	0x95
 1589 0772 D0000000 		.4byte	0xd0
 1590 0776 42050000 		.4byte	.LLST32
 1591 077a 18       		.uleb128 0x18
 1592 077b 1C000000 		.4byte	.LVL78
 1593 077f 6F060000 		.4byte	0x66f
 1594 0783 19       		.uleb128 0x19
 1595 0784 01       		.uleb128 0x1
 1596 0785 50       		.byte	0x50
 1597 0786 02       		.uleb128 0x2
 1598 0787 76       		.byte	0x76
 1599 0788 00       		.sleb128 0
 1600 0789 19       		.uleb128 0x19
 1601 078a 01       		.uleb128 0x1
 1602 078b 51       		.byte	0x51
 1603 078c 02       		.uleb128 0x2
 1604 078d 74       		.byte	0x74
 1605 078e 00       		.sleb128 0
 1606 078f 00       		.byte	0
 1607 0790 00       		.byte	0
 1608 0791 1F       		.uleb128 0x1f
 1609 0792 8E040000 		.4byte	.LASF89
 1610 0796 01       		.byte	0x1
 1611 0797 62       		.byte	0x62
 1612 0798 D0000000 		.4byte	0xd0
 1613 079c 00000000 		.4byte	.LFB37
 1614 07a0 1C000000 		.4byte	.LFE37-.LFB37
 1615 07a4 01       		.uleb128 0x1
 1616 07a5 9C       		.byte	0x9c
 1617 07a6 D9070000 		.4byte	0x7d9
 1618 07aa 23       		.uleb128 0x23
 1619 07ab 4F050000 		.4byte	.LASF67
 1620 07af 01       		.byte	0x1
 1621 07b0 64       		.byte	0x64
 1622 07b1 F4000000 		.4byte	0xf4
 1623 07b5 6C050000 		.4byte	.LLST33
 1624 07b9 23       		.uleb128 0x23
 1625 07ba 46000000 		.4byte	.LASF88
 1626 07be 01       		.byte	0x1
 1627 07bf 65       		.byte	0x65
 1628 07c0 D0000000 		.4byte	0xd0
 1629 07c4 AE050000 		.4byte	.LLST34
 1630 07c8 18       		.uleb128 0x18
 1631 07c9 0E000000 		.4byte	.LVL87
 1632 07cd 1A070000 		.4byte	0x71a
 1633 07d1 19       		.uleb128 0x19
 1634 07d2 01       		.uleb128 0x1
 1635 07d3 50       		.byte	0x50
 1636 07d4 02       		.uleb128 0x2
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 61


 1637 07d5 74       		.byte	0x74
 1638 07d6 00       		.sleb128 0
 1639 07d7 00       		.byte	0
 1640 07d8 00       		.byte	0
 1641 07d9 25       		.uleb128 0x25
 1642 07da 09060000 		.4byte	.LASF94
 1643 07de 06       		.byte	0x6
 1644 07df 2704     		.2byte	0x427
 1645 07e1 E5070000 		.4byte	0x7e5
 1646 07e5 1B       		.uleb128 0x1b
 1647 07e6 2E030000 		.4byte	0x32e
 1648 07ea 00       		.byte	0
 1649              		.section	.debug_abbrev,"",%progbits
 1650              	.Ldebug_abbrev0:
 1651 0000 01       		.uleb128 0x1
 1652 0001 11       		.uleb128 0x11
 1653 0002 01       		.byte	0x1
 1654 0003 25       		.uleb128 0x25
 1655 0004 0E       		.uleb128 0xe
 1656 0005 13       		.uleb128 0x13
 1657 0006 0B       		.uleb128 0xb
 1658 0007 03       		.uleb128 0x3
 1659 0008 0E       		.uleb128 0xe
 1660 0009 1B       		.uleb128 0x1b
 1661 000a 0E       		.uleb128 0xe
 1662 000b 55       		.uleb128 0x55
 1663 000c 17       		.uleb128 0x17
 1664 000d 11       		.uleb128 0x11
 1665 000e 01       		.uleb128 0x1
 1666 000f 10       		.uleb128 0x10
 1667 0010 17       		.uleb128 0x17
 1668 0011 00       		.byte	0
 1669 0012 00       		.byte	0
 1670 0013 02       		.uleb128 0x2
 1671 0014 24       		.uleb128 0x24
 1672 0015 00       		.byte	0
 1673 0016 0B       		.uleb128 0xb
 1674 0017 0B       		.uleb128 0xb
 1675 0018 3E       		.uleb128 0x3e
 1676 0019 0B       		.uleb128 0xb
 1677 001a 03       		.uleb128 0x3
 1678 001b 08       		.uleb128 0x8
 1679 001c 00       		.byte	0
 1680 001d 00       		.byte	0
 1681 001e 03       		.uleb128 0x3
 1682 001f 24       		.uleb128 0x24
 1683 0020 00       		.byte	0
 1684 0021 0B       		.uleb128 0xb
 1685 0022 0B       		.uleb128 0xb
 1686 0023 3E       		.uleb128 0x3e
 1687 0024 0B       		.uleb128 0xb
 1688 0025 03       		.uleb128 0x3
 1689 0026 0E       		.uleb128 0xe
 1690 0027 00       		.byte	0
 1691 0028 00       		.byte	0
 1692 0029 04       		.uleb128 0x4
 1693 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 62


 1694 002b 00       		.byte	0
 1695 002c 03       		.uleb128 0x3
 1696 002d 0E       		.uleb128 0xe
 1697 002e 3A       		.uleb128 0x3a
 1698 002f 0B       		.uleb128 0xb
 1699 0030 3B       		.uleb128 0x3b
 1700 0031 0B       		.uleb128 0xb
 1701 0032 49       		.uleb128 0x49
 1702 0033 13       		.uleb128 0x13
 1703 0034 00       		.byte	0
 1704 0035 00       		.byte	0
 1705 0036 05       		.uleb128 0x5
 1706 0037 16       		.uleb128 0x16
 1707 0038 00       		.byte	0
 1708 0039 03       		.uleb128 0x3
 1709 003a 0E       		.uleb128 0xe
 1710 003b 3A       		.uleb128 0x3a
 1711 003c 0B       		.uleb128 0xb
 1712 003d 3B       		.uleb128 0x3b
 1713 003e 05       		.uleb128 0x5
 1714 003f 49       		.uleb128 0x49
 1715 0040 13       		.uleb128 0x13
 1716 0041 00       		.byte	0
 1717 0042 00       		.byte	0
 1718 0043 06       		.uleb128 0x6
 1719 0044 04       		.uleb128 0x4
 1720 0045 01       		.byte	0x1
 1721 0046 0B       		.uleb128 0xb
 1722 0047 0B       		.uleb128 0xb
 1723 0048 49       		.uleb128 0x49
 1724 0049 13       		.uleb128 0x13
 1725 004a 3A       		.uleb128 0x3a
 1726 004b 0B       		.uleb128 0xb
 1727 004c 3B       		.uleb128 0x3b
 1728 004d 0B       		.uleb128 0xb
 1729 004e 01       		.uleb128 0x1
 1730 004f 13       		.uleb128 0x13
 1731 0050 00       		.byte	0
 1732 0051 00       		.byte	0
 1733 0052 07       		.uleb128 0x7
 1734 0053 28       		.uleb128 0x28
 1735 0054 00       		.byte	0
 1736 0055 03       		.uleb128 0x3
 1737 0056 0E       		.uleb128 0xe
 1738 0057 1C       		.uleb128 0x1c
 1739 0058 0B       		.uleb128 0xb
 1740 0059 00       		.byte	0
 1741 005a 00       		.byte	0
 1742 005b 08       		.uleb128 0x8
 1743 005c 13       		.uleb128 0x13
 1744 005d 01       		.byte	0x1
 1745 005e 0B       		.uleb128 0xb
 1746 005f 0B       		.uleb128 0xb
 1747 0060 3A       		.uleb128 0x3a
 1748 0061 0B       		.uleb128 0xb
 1749 0062 3B       		.uleb128 0x3b
 1750 0063 0B       		.uleb128 0xb
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 63


 1751 0064 01       		.uleb128 0x1
 1752 0065 13       		.uleb128 0x13
 1753 0066 00       		.byte	0
 1754 0067 00       		.byte	0
 1755 0068 09       		.uleb128 0x9
 1756 0069 0D       		.uleb128 0xd
 1757 006a 00       		.byte	0
 1758 006b 03       		.uleb128 0x3
 1759 006c 0E       		.uleb128 0xe
 1760 006d 3A       		.uleb128 0x3a
 1761 006e 0B       		.uleb128 0xb
 1762 006f 3B       		.uleb128 0x3b
 1763 0070 0B       		.uleb128 0xb
 1764 0071 49       		.uleb128 0x49
 1765 0072 13       		.uleb128 0x13
 1766 0073 38       		.uleb128 0x38
 1767 0074 0B       		.uleb128 0xb
 1768 0075 00       		.byte	0
 1769 0076 00       		.byte	0
 1770 0077 0A       		.uleb128 0xa
 1771 0078 01       		.uleb128 0x1
 1772 0079 01       		.byte	0x1
 1773 007a 49       		.uleb128 0x49
 1774 007b 13       		.uleb128 0x13
 1775 007c 01       		.uleb128 0x1
 1776 007d 13       		.uleb128 0x13
 1777 007e 00       		.byte	0
 1778 007f 00       		.byte	0
 1779 0080 0B       		.uleb128 0xb
 1780 0081 21       		.uleb128 0x21
 1781 0082 00       		.byte	0
 1782 0083 49       		.uleb128 0x49
 1783 0084 13       		.uleb128 0x13
 1784 0085 2F       		.uleb128 0x2f
 1785 0086 0B       		.uleb128 0xb
 1786 0087 00       		.byte	0
 1787 0088 00       		.byte	0
 1788 0089 0C       		.uleb128 0xc
 1789 008a 13       		.uleb128 0x13
 1790 008b 01       		.byte	0x1
 1791 008c 0B       		.uleb128 0xb
 1792 008d 0B       		.uleb128 0xb
 1793 008e 3A       		.uleb128 0x3a
 1794 008f 0B       		.uleb128 0xb
 1795 0090 3B       		.uleb128 0x3b
 1796 0091 05       		.uleb128 0x5
 1797 0092 01       		.uleb128 0x1
 1798 0093 13       		.uleb128 0x13
 1799 0094 00       		.byte	0
 1800 0095 00       		.byte	0
 1801 0096 0D       		.uleb128 0xd
 1802 0097 0D       		.uleb128 0xd
 1803 0098 00       		.byte	0
 1804 0099 03       		.uleb128 0x3
 1805 009a 08       		.uleb128 0x8
 1806 009b 3A       		.uleb128 0x3a
 1807 009c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 64


 1808 009d 3B       		.uleb128 0x3b
 1809 009e 05       		.uleb128 0x5
 1810 009f 49       		.uleb128 0x49
 1811 00a0 13       		.uleb128 0x13
 1812 00a1 38       		.uleb128 0x38
 1813 00a2 0B       		.uleb128 0xb
 1814 00a3 00       		.byte	0
 1815 00a4 00       		.byte	0
 1816 00a5 0E       		.uleb128 0xe
 1817 00a6 0D       		.uleb128 0xd
 1818 00a7 00       		.byte	0
 1819 00a8 03       		.uleb128 0x3
 1820 00a9 0E       		.uleb128 0xe
 1821 00aa 3A       		.uleb128 0x3a
 1822 00ab 0B       		.uleb128 0xb
 1823 00ac 3B       		.uleb128 0x3b
 1824 00ad 05       		.uleb128 0x5
 1825 00ae 49       		.uleb128 0x49
 1826 00af 13       		.uleb128 0x13
 1827 00b0 38       		.uleb128 0x38
 1828 00b1 0B       		.uleb128 0xb
 1829 00b2 00       		.byte	0
 1830 00b3 00       		.byte	0
 1831 00b4 0F       		.uleb128 0xf
 1832 00b5 0F       		.uleb128 0xf
 1833 00b6 00       		.byte	0
 1834 00b7 0B       		.uleb128 0xb
 1835 00b8 0B       		.uleb128 0xb
 1836 00b9 49       		.uleb128 0x49
 1837 00ba 13       		.uleb128 0x13
 1838 00bb 00       		.byte	0
 1839 00bc 00       		.byte	0
 1840 00bd 10       		.uleb128 0x10
 1841 00be 26       		.uleb128 0x26
 1842 00bf 00       		.byte	0
 1843 00c0 00       		.byte	0
 1844 00c1 00       		.byte	0
 1845 00c2 11       		.uleb128 0x11
 1846 00c3 0F       		.uleb128 0xf
 1847 00c4 00       		.byte	0
 1848 00c5 0B       		.uleb128 0xb
 1849 00c6 0B       		.uleb128 0xb
 1850 00c7 00       		.byte	0
 1851 00c8 00       		.byte	0
 1852 00c9 12       		.uleb128 0x12
 1853 00ca 13       		.uleb128 0x13
 1854 00cb 01       		.byte	0x1
 1855 00cc 0B       		.uleb128 0xb
 1856 00cd 05       		.uleb128 0x5
 1857 00ce 3A       		.uleb128 0x3a
 1858 00cf 0B       		.uleb128 0xb
 1859 00d0 3B       		.uleb128 0x3b
 1860 00d1 05       		.uleb128 0x5
 1861 00d2 01       		.uleb128 0x1
 1862 00d3 13       		.uleb128 0x13
 1863 00d4 00       		.byte	0
 1864 00d5 00       		.byte	0
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 65


 1865 00d6 13       		.uleb128 0x13
 1866 00d7 2E       		.uleb128 0x2e
 1867 00d8 00       		.byte	0
 1868 00d9 3F       		.uleb128 0x3f
 1869 00da 19       		.uleb128 0x19
 1870 00db 03       		.uleb128 0x3
 1871 00dc 0E       		.uleb128 0xe
 1872 00dd 3A       		.uleb128 0x3a
 1873 00de 0B       		.uleb128 0xb
 1874 00df 3B       		.uleb128 0x3b
 1875 00e0 0B       		.uleb128 0xb
 1876 00e1 27       		.uleb128 0x27
 1877 00e2 19       		.uleb128 0x19
 1878 00e3 11       		.uleb128 0x11
 1879 00e4 01       		.uleb128 0x1
 1880 00e5 12       		.uleb128 0x12
 1881 00e6 06       		.uleb128 0x6
 1882 00e7 40       		.uleb128 0x40
 1883 00e8 18       		.uleb128 0x18
 1884 00e9 9742     		.uleb128 0x2117
 1885 00eb 19       		.uleb128 0x19
 1886 00ec 00       		.byte	0
 1887 00ed 00       		.byte	0
 1888 00ee 14       		.uleb128 0x14
 1889 00ef 2E       		.uleb128 0x2e
 1890 00f0 01       		.byte	0x1
 1891 00f1 3F       		.uleb128 0x3f
 1892 00f2 19       		.uleb128 0x19
 1893 00f3 03       		.uleb128 0x3
 1894 00f4 0E       		.uleb128 0xe
 1895 00f5 3A       		.uleb128 0x3a
 1896 00f6 0B       		.uleb128 0xb
 1897 00f7 3B       		.uleb128 0x3b
 1898 00f8 05       		.uleb128 0x5
 1899 00f9 27       		.uleb128 0x27
 1900 00fa 19       		.uleb128 0x19
 1901 00fb 11       		.uleb128 0x11
 1902 00fc 01       		.uleb128 0x1
 1903 00fd 12       		.uleb128 0x12
 1904 00fe 06       		.uleb128 0x6
 1905 00ff 40       		.uleb128 0x40
 1906 0100 18       		.uleb128 0x18
 1907 0101 9742     		.uleb128 0x2117
 1908 0103 19       		.uleb128 0x19
 1909 0104 01       		.uleb128 0x1
 1910 0105 13       		.uleb128 0x13
 1911 0106 00       		.byte	0
 1912 0107 00       		.byte	0
 1913 0108 15       		.uleb128 0x15
 1914 0109 05       		.uleb128 0x5
 1915 010a 00       		.byte	0
 1916 010b 03       		.uleb128 0x3
 1917 010c 0E       		.uleb128 0xe
 1918 010d 3A       		.uleb128 0x3a
 1919 010e 0B       		.uleb128 0xb
 1920 010f 3B       		.uleb128 0x3b
 1921 0110 05       		.uleb128 0x5
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 66


 1922 0111 49       		.uleb128 0x49
 1923 0112 13       		.uleb128 0x13
 1924 0113 02       		.uleb128 0x2
 1925 0114 18       		.uleb128 0x18
 1926 0115 00       		.byte	0
 1927 0116 00       		.byte	0
 1928 0117 16       		.uleb128 0x16
 1929 0118 05       		.uleb128 0x5
 1930 0119 00       		.byte	0
 1931 011a 03       		.uleb128 0x3
 1932 011b 0E       		.uleb128 0xe
 1933 011c 3A       		.uleb128 0x3a
 1934 011d 0B       		.uleb128 0xb
 1935 011e 3B       		.uleb128 0x3b
 1936 011f 05       		.uleb128 0x5
 1937 0120 49       		.uleb128 0x49
 1938 0121 13       		.uleb128 0x13
 1939 0122 02       		.uleb128 0x2
 1940 0123 17       		.uleb128 0x17
 1941 0124 00       		.byte	0
 1942 0125 00       		.byte	0
 1943 0126 17       		.uleb128 0x17
 1944 0127 34       		.uleb128 0x34
 1945 0128 00       		.byte	0
 1946 0129 03       		.uleb128 0x3
 1947 012a 0E       		.uleb128 0xe
 1948 012b 3A       		.uleb128 0x3a
 1949 012c 0B       		.uleb128 0xb
 1950 012d 3B       		.uleb128 0x3b
 1951 012e 05       		.uleb128 0x5
 1952 012f 49       		.uleb128 0x49
 1953 0130 13       		.uleb128 0x13
 1954 0131 02       		.uleb128 0x2
 1955 0132 17       		.uleb128 0x17
 1956 0133 00       		.byte	0
 1957 0134 00       		.byte	0
 1958 0135 18       		.uleb128 0x18
 1959 0136 898201   		.uleb128 0x4109
 1960 0139 01       		.byte	0x1
 1961 013a 11       		.uleb128 0x11
 1962 013b 01       		.uleb128 0x1
 1963 013c 31       		.uleb128 0x31
 1964 013d 13       		.uleb128 0x13
 1965 013e 00       		.byte	0
 1966 013f 00       		.byte	0
 1967 0140 19       		.uleb128 0x19
 1968 0141 8A8201   		.uleb128 0x410a
 1969 0144 00       		.byte	0
 1970 0145 02       		.uleb128 0x2
 1971 0146 18       		.uleb128 0x18
 1972 0147 9142     		.uleb128 0x2111
 1973 0149 18       		.uleb128 0x18
 1974 014a 00       		.byte	0
 1975 014b 00       		.byte	0
 1976 014c 1A       		.uleb128 0x1a
 1977 014d 34       		.uleb128 0x34
 1978 014e 00       		.byte	0
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 67


 1979 014f 03       		.uleb128 0x3
 1980 0150 0E       		.uleb128 0xe
 1981 0151 3A       		.uleb128 0x3a
 1982 0152 0B       		.uleb128 0xb
 1983 0153 3B       		.uleb128 0x3b
 1984 0154 05       		.uleb128 0x5
 1985 0155 49       		.uleb128 0x49
 1986 0156 13       		.uleb128 0x13
 1987 0157 00       		.byte	0
 1988 0158 00       		.byte	0
 1989 0159 1B       		.uleb128 0x1b
 1990 015a 26       		.uleb128 0x26
 1991 015b 00       		.byte	0
 1992 015c 49       		.uleb128 0x49
 1993 015d 13       		.uleb128 0x13
 1994 015e 00       		.byte	0
 1995 015f 00       		.byte	0
 1996 0160 1C       		.uleb128 0x1c
 1997 0161 2E       		.uleb128 0x2e
 1998 0162 01       		.byte	0x1
 1999 0163 3F       		.uleb128 0x3f
 2000 0164 19       		.uleb128 0x19
 2001 0165 03       		.uleb128 0x3
 2002 0166 0E       		.uleb128 0xe
 2003 0167 3A       		.uleb128 0x3a
 2004 0168 0B       		.uleb128 0xb
 2005 0169 3B       		.uleb128 0x3b
 2006 016a 05       		.uleb128 0x5
 2007 016b 27       		.uleb128 0x27
 2008 016c 19       		.uleb128 0x19
 2009 016d 49       		.uleb128 0x49
 2010 016e 13       		.uleb128 0x13
 2011 016f 11       		.uleb128 0x11
 2012 0170 01       		.uleb128 0x1
 2013 0171 12       		.uleb128 0x12
 2014 0172 06       		.uleb128 0x6
 2015 0173 40       		.uleb128 0x40
 2016 0174 18       		.uleb128 0x18
 2017 0175 9742     		.uleb128 0x2117
 2018 0177 19       		.uleb128 0x19
 2019 0178 01       		.uleb128 0x1
 2020 0179 13       		.uleb128 0x13
 2021 017a 00       		.byte	0
 2022 017b 00       		.byte	0
 2023 017c 1D       		.uleb128 0x1d
 2024 017d 05       		.uleb128 0x5
 2025 017e 00       		.byte	0
 2026 017f 03       		.uleb128 0x3
 2027 0180 08       		.uleb128 0x8
 2028 0181 3A       		.uleb128 0x3a
 2029 0182 0B       		.uleb128 0xb
 2030 0183 3B       		.uleb128 0x3b
 2031 0184 05       		.uleb128 0x5
 2032 0185 49       		.uleb128 0x49
 2033 0186 13       		.uleb128 0x13
 2034 0187 02       		.uleb128 0x2
 2035 0188 17       		.uleb128 0x17
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 68


 2036 0189 00       		.byte	0
 2037 018a 00       		.byte	0
 2038 018b 1E       		.uleb128 0x1e
 2039 018c 34       		.uleb128 0x34
 2040 018d 00       		.byte	0
 2041 018e 03       		.uleb128 0x3
 2042 018f 0E       		.uleb128 0xe
 2043 0190 3A       		.uleb128 0x3a
 2044 0191 0B       		.uleb128 0xb
 2045 0192 3B       		.uleb128 0x3b
 2046 0193 05       		.uleb128 0x5
 2047 0194 49       		.uleb128 0x49
 2048 0195 13       		.uleb128 0x13
 2049 0196 02       		.uleb128 0x2
 2050 0197 18       		.uleb128 0x18
 2051 0198 00       		.byte	0
 2052 0199 00       		.byte	0
 2053 019a 1F       		.uleb128 0x1f
 2054 019b 2E       		.uleb128 0x2e
 2055 019c 01       		.byte	0x1
 2056 019d 3F       		.uleb128 0x3f
 2057 019e 19       		.uleb128 0x19
 2058 019f 03       		.uleb128 0x3
 2059 01a0 0E       		.uleb128 0xe
 2060 01a1 3A       		.uleb128 0x3a
 2061 01a2 0B       		.uleb128 0xb
 2062 01a3 3B       		.uleb128 0x3b
 2063 01a4 0B       		.uleb128 0xb
 2064 01a5 27       		.uleb128 0x27
 2065 01a6 19       		.uleb128 0x19
 2066 01a7 49       		.uleb128 0x49
 2067 01a8 13       		.uleb128 0x13
 2068 01a9 11       		.uleb128 0x11
 2069 01aa 01       		.uleb128 0x1
 2070 01ab 12       		.uleb128 0x12
 2071 01ac 06       		.uleb128 0x6
 2072 01ad 40       		.uleb128 0x40
 2073 01ae 18       		.uleb128 0x18
 2074 01af 9742     		.uleb128 0x2117
 2075 01b1 19       		.uleb128 0x19
 2076 01b2 01       		.uleb128 0x1
 2077 01b3 13       		.uleb128 0x13
 2078 01b4 00       		.byte	0
 2079 01b5 00       		.byte	0
 2080 01b6 20       		.uleb128 0x20
 2081 01b7 34       		.uleb128 0x34
 2082 01b8 00       		.byte	0
 2083 01b9 03       		.uleb128 0x3
 2084 01ba 0E       		.uleb128 0xe
 2085 01bb 3A       		.uleb128 0x3a
 2086 01bc 0B       		.uleb128 0xb
 2087 01bd 3B       		.uleb128 0x3b
 2088 01be 05       		.uleb128 0x5
 2089 01bf 49       		.uleb128 0x49
 2090 01c0 13       		.uleb128 0x13
 2091 01c1 1C       		.uleb128 0x1c
 2092 01c2 0B       		.uleb128 0xb
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 69


 2093 01c3 00       		.byte	0
 2094 01c4 00       		.byte	0
 2095 01c5 21       		.uleb128 0x21
 2096 01c6 898201   		.uleb128 0x4109
 2097 01c9 01       		.byte	0x1
 2098 01ca 11       		.uleb128 0x11
 2099 01cb 01       		.uleb128 0x1
 2100 01cc 31       		.uleb128 0x31
 2101 01cd 13       		.uleb128 0x13
 2102 01ce 01       		.uleb128 0x1
 2103 01cf 13       		.uleb128 0x13
 2104 01d0 00       		.byte	0
 2105 01d1 00       		.byte	0
 2106 01d2 22       		.uleb128 0x22
 2107 01d3 05       		.uleb128 0x5
 2108 01d4 00       		.byte	0
 2109 01d5 03       		.uleb128 0x3
 2110 01d6 0E       		.uleb128 0xe
 2111 01d7 3A       		.uleb128 0x3a
 2112 01d8 0B       		.uleb128 0xb
 2113 01d9 3B       		.uleb128 0x3b
 2114 01da 0B       		.uleb128 0xb
 2115 01db 49       		.uleb128 0x49
 2116 01dc 13       		.uleb128 0x13
 2117 01dd 02       		.uleb128 0x2
 2118 01de 17       		.uleb128 0x17
 2119 01df 00       		.byte	0
 2120 01e0 00       		.byte	0
 2121 01e1 23       		.uleb128 0x23
 2122 01e2 34       		.uleb128 0x34
 2123 01e3 00       		.byte	0
 2124 01e4 03       		.uleb128 0x3
 2125 01e5 0E       		.uleb128 0xe
 2126 01e6 3A       		.uleb128 0x3a
 2127 01e7 0B       		.uleb128 0xb
 2128 01e8 3B       		.uleb128 0x3b
 2129 01e9 0B       		.uleb128 0xb
 2130 01ea 49       		.uleb128 0x49
 2131 01eb 13       		.uleb128 0x13
 2132 01ec 02       		.uleb128 0x2
 2133 01ed 17       		.uleb128 0x17
 2134 01ee 00       		.byte	0
 2135 01ef 00       		.byte	0
 2136 01f0 24       		.uleb128 0x24
 2137 01f1 34       		.uleb128 0x34
 2138 01f2 00       		.byte	0
 2139 01f3 03       		.uleb128 0x3
 2140 01f4 0E       		.uleb128 0xe
 2141 01f5 3A       		.uleb128 0x3a
 2142 01f6 0B       		.uleb128 0xb
 2143 01f7 3B       		.uleb128 0x3b
 2144 01f8 0B       		.uleb128 0xb
 2145 01f9 49       		.uleb128 0x49
 2146 01fa 13       		.uleb128 0x13
 2147 01fb 00       		.byte	0
 2148 01fc 00       		.byte	0
 2149 01fd 25       		.uleb128 0x25
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 70


 2150 01fe 34       		.uleb128 0x34
 2151 01ff 00       		.byte	0
 2152 0200 03       		.uleb128 0x3
 2153 0201 0E       		.uleb128 0xe
 2154 0202 3A       		.uleb128 0x3a
 2155 0203 0B       		.uleb128 0xb
 2156 0204 3B       		.uleb128 0x3b
 2157 0205 05       		.uleb128 0x5
 2158 0206 49       		.uleb128 0x49
 2159 0207 13       		.uleb128 0x13
 2160 0208 3F       		.uleb128 0x3f
 2161 0209 19       		.uleb128 0x19
 2162 020a 3C       		.uleb128 0x3c
 2163 020b 19       		.uleb128 0x19
 2164 020c 00       		.byte	0
 2165 020d 00       		.byte	0
 2166 020e 00       		.byte	0
 2167              		.section	.debug_loc,"",%progbits
 2168              	.Ldebug_loc0:
 2169              	.LLST0:
 2170 0000 00000000 		.4byte	.LVL0
 2171 0004 04000000 		.4byte	.LVL1
 2172 0008 0100     		.2byte	0x1
 2173 000a 51       		.byte	0x51
 2174 000b 04000000 		.4byte	.LVL1
 2175 000f 1E000000 		.4byte	.LFE45
 2176 0013 0400     		.2byte	0x4
 2177 0015 F3       		.byte	0xf3
 2178 0016 01       		.uleb128 0x1
 2179 0017 51       		.byte	0x51
 2180 0018 9F       		.byte	0x9f
 2181 0019 00000000 		.4byte	0
 2182 001d 00000000 		.4byte	0
 2183              	.LLST1:
 2184 0021 00000000 		.4byte	.LVL0
 2185 0025 18000000 		.4byte	.LVL2
 2186 0029 0100     		.2byte	0x1
 2187 002b 52       		.byte	0x52
 2188 002c 18000000 		.4byte	.LVL2
 2189 0030 1E000000 		.4byte	.LFE45
 2190 0034 0400     		.2byte	0x4
 2191 0036 F3       		.byte	0xf3
 2192 0037 01       		.uleb128 0x1
 2193 0038 52       		.byte	0x52
 2194 0039 9F       		.byte	0x9f
 2195 003a 00000000 		.4byte	0
 2196 003e 00000000 		.4byte	0
 2197              	.LLST2:
 2198 0042 00000000 		.4byte	.LVL3
 2199 0046 0A000000 		.4byte	.LVL5
 2200 004a 0100     		.2byte	0x1
 2201 004c 50       		.byte	0x50
 2202 004d 0A000000 		.4byte	.LVL5
 2203 0051 1C000000 		.4byte	.LVL11
 2204 0055 0100     		.2byte	0x1
 2205 0057 56       		.byte	0x56
 2206 0058 1C000000 		.4byte	.LVL11
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 71


 2207 005c 1E000000 		.4byte	.LFE44
 2208 0060 0400     		.2byte	0x4
 2209 0062 F3       		.byte	0xf3
 2210 0063 01       		.uleb128 0x1
 2211 0064 50       		.byte	0x50
 2212 0065 9F       		.byte	0x9f
 2213 0066 00000000 		.4byte	0
 2214 006a 00000000 		.4byte	0
 2215              	.LLST3:
 2216 006e 00000000 		.4byte	.LVL3
 2217 0072 0A000000 		.4byte	.LVL5
 2218 0076 0100     		.2byte	0x1
 2219 0078 51       		.byte	0x51
 2220 0079 0A000000 		.4byte	.LVL5
 2221 007d 1C000000 		.4byte	.LVL10
 2222 0081 0100     		.2byte	0x1
 2223 0083 55       		.byte	0x55
 2224 0084 1C000000 		.4byte	.LVL10
 2225 0088 1E000000 		.4byte	.LFE44
 2226 008c 0400     		.2byte	0x4
 2227 008e F3       		.byte	0xf3
 2228 008f 01       		.uleb128 0x1
 2229 0090 51       		.byte	0x51
 2230 0091 9F       		.byte	0x9f
 2231 0092 00000000 		.4byte	0
 2232 0096 00000000 		.4byte	0
 2233              	.LLST4:
 2234 009a 06000000 		.4byte	.LVL4
 2235 009e 0A000000 		.4byte	.LVL5
 2236 00a2 0200     		.2byte	0x2
 2237 00a4 31       		.byte	0x31
 2238 00a5 9F       		.byte	0x9f
 2239 00a6 0A000000 		.4byte	.LVL5
 2240 00aa 16000000 		.4byte	.LVL7
 2241 00ae 0100     		.2byte	0x1
 2242 00b0 54       		.byte	0x54
 2243 00b1 16000000 		.4byte	.LVL7
 2244 00b5 18000000 		.4byte	.LVL8
 2245 00b9 0100     		.2byte	0x1
 2246 00bb 53       		.byte	0x53
 2247 00bc 18000000 		.4byte	.LVL8
 2248 00c0 1C000000 		.4byte	.LVL9
 2249 00c4 0100     		.2byte	0x1
 2250 00c6 54       		.byte	0x54
 2251 00c7 1C000000 		.4byte	.LVL9
 2252 00cb 1E000000 		.4byte	.LFE44
 2253 00cf 0300     		.2byte	0x3
 2254 00d1 73       		.byte	0x73
 2255 00d2 7F       		.sleb128 -1
 2256 00d3 9F       		.byte	0x9f
 2257 00d4 00000000 		.4byte	0
 2258 00d8 00000000 		.4byte	0
 2259              	.LLST5:
 2260 00dc 00000000 		.4byte	.LVL12
 2261 00e0 20000000 		.4byte	.LVL17
 2262 00e4 0100     		.2byte	0x1
 2263 00e6 50       		.byte	0x50
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 72


 2264 00e7 20000000 		.4byte	.LVL17
 2265 00eb 2C000000 		.4byte	.LFE43
 2266 00ef 0400     		.2byte	0x4
 2267 00f1 F3       		.byte	0xf3
 2268 00f2 01       		.uleb128 0x1
 2269 00f3 50       		.byte	0x50
 2270 00f4 9F       		.byte	0x9f
 2271 00f5 00000000 		.4byte	0
 2272 00f9 00000000 		.4byte	0
 2273              	.LLST6:
 2274 00fd 00000000 		.4byte	.LVL12
 2275 0101 12000000 		.4byte	.LVL15
 2276 0105 0100     		.2byte	0x1
 2277 0107 51       		.byte	0x51
 2278 0108 12000000 		.4byte	.LVL15
 2279 010c 2C000000 		.4byte	.LFE43
 2280 0110 0400     		.2byte	0x4
 2281 0112 F3       		.byte	0xf3
 2282 0113 01       		.uleb128 0x1
 2283 0114 51       		.byte	0x51
 2284 0115 9F       		.byte	0x9f
 2285 0116 00000000 		.4byte	0
 2286 011a 00000000 		.4byte	0
 2287              	.LLST7:
 2288 011e 02000000 		.4byte	.LVL13
 2289 0122 0E000000 		.4byte	.LVL14
 2290 0126 0200     		.2byte	0x2
 2291 0128 30       		.byte	0x30
 2292 0129 9F       		.byte	0x9f
 2293 012a 0E000000 		.4byte	.LVL14
 2294 012e 16000000 		.4byte	.LVL16
 2295 0132 0100     		.2byte	0x1
 2296 0134 55       		.byte	0x55
 2297 0135 16000000 		.4byte	.LVL16
 2298 0139 23000000 		.4byte	.LVL18-1
 2299 013d 0100     		.2byte	0x1
 2300 013f 52       		.byte	0x52
 2301 0140 23000000 		.4byte	.LVL18-1
 2302 0144 24000000 		.4byte	.LVL19
 2303 0148 0F00     		.2byte	0xf
 2304 014a F3       		.byte	0xf3
 2305 014b 01       		.uleb128 0x1
 2306 014c 51       		.byte	0x51
 2307 014d 32       		.byte	0x32
 2308 014e 24       		.byte	0x24
 2309 014f F3       		.byte	0xf3
 2310 0150 01       		.uleb128 0x1
 2311 0151 51       		.byte	0x51
 2312 0152 22       		.byte	0x22
 2313 0153 31       		.byte	0x31
 2314 0154 24       		.byte	0x24
 2315 0155 75       		.byte	0x75
 2316 0156 00       		.sleb128 0
 2317 0157 22       		.byte	0x22
 2318 0158 9F       		.byte	0x9f
 2319 0159 00000000 		.4byte	0
 2320 015d 00000000 		.4byte	0
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 73


 2321              	.LLST8:
 2322 0161 00000000 		.4byte	.LVL20
 2323 0165 12000000 		.4byte	.LVL23
 2324 0169 0100     		.2byte	0x1
 2325 016b 50       		.byte	0x50
 2326 016c 12000000 		.4byte	.LVL23
 2327 0170 22000000 		.4byte	.LVL28
 2328 0174 0100     		.2byte	0x1
 2329 0176 55       		.byte	0x55
 2330 0177 22000000 		.4byte	.LVL28
 2331 017b 28000000 		.4byte	.LFE42
 2332 017f 0400     		.2byte	0x4
 2333 0181 F3       		.byte	0xf3
 2334 0182 01       		.uleb128 0x1
 2335 0183 50       		.byte	0x50
 2336 0184 9F       		.byte	0x9f
 2337 0185 00000000 		.4byte	0
 2338 0189 00000000 		.4byte	0
 2339              	.LLST9:
 2340 018d 10000000 		.4byte	.LVL22
 2341 0191 12000000 		.4byte	.LVL23
 2342 0195 0100     		.2byte	0x1
 2343 0197 53       		.byte	0x53
 2344 0198 12000000 		.4byte	.LVL23
 2345 019c 1C000000 		.4byte	.LVL25
 2346 01a0 0100     		.2byte	0x1
 2347 01a2 54       		.byte	0x54
 2348 01a3 1C000000 		.4byte	.LVL25
 2349 01a7 1E000000 		.4byte	.LVL26
 2350 01ab 0100     		.2byte	0x1
 2351 01ad 53       		.byte	0x53
 2352 01ae 1E000000 		.4byte	.LVL26
 2353 01b2 22000000 		.4byte	.LVL27
 2354 01b6 0100     		.2byte	0x1
 2355 01b8 54       		.byte	0x54
 2356 01b9 22000000 		.4byte	.LVL27
 2357 01bd 28000000 		.4byte	.LFE42
 2358 01c1 0300     		.2byte	0x3
 2359 01c3 73       		.byte	0x73
 2360 01c4 7F       		.sleb128 -1
 2361 01c5 9F       		.byte	0x9f
 2362 01c6 00000000 		.4byte	0
 2363 01ca 00000000 		.4byte	0
 2364              	.LLST10:
 2365 01ce 10000000 		.4byte	.LVL22
 2366 01d2 12000000 		.4byte	.LVL23
 2367 01d6 0100     		.2byte	0x1
 2368 01d8 53       		.byte	0x53
 2369 01d9 00000000 		.4byte	0
 2370 01dd 00000000 		.4byte	0
 2371              	.LLST11:
 2372 01e1 02000000 		.4byte	.LVL29
 2373 01e5 06000000 		.4byte	.LVL30
 2374 01e9 0200     		.2byte	0x2
 2375 01eb 3A       		.byte	0x3a
 2376 01ec 9F       		.byte	0x9f
 2377 01ed 06000000 		.4byte	.LVL30
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 74


 2378 01f1 0E000000 		.4byte	.LVL32
 2379 01f5 0100     		.2byte	0x1
 2380 01f7 54       		.byte	0x54
 2381 01f8 0E000000 		.4byte	.LVL32
 2382 01fc 10000000 		.4byte	.LVL33
 2383 0200 0100     		.2byte	0x1
 2384 0202 53       		.byte	0x53
 2385 0203 10000000 		.4byte	.LVL33
 2386 0207 14000000 		.4byte	.LVL34
 2387 020b 0100     		.2byte	0x1
 2388 020d 54       		.byte	0x54
 2389 020e 14000000 		.4byte	.LVL34
 2390 0212 16000000 		.4byte	.LFE41
 2391 0216 0300     		.2byte	0x3
 2392 0218 73       		.byte	0x73
 2393 0219 7F       		.sleb128 -1
 2394 021a 9F       		.byte	0x9f
 2395 021b 00000000 		.4byte	0
 2396 021f 00000000 		.4byte	0
 2397              	.LLST12:
 2398 0223 00000000 		.4byte	.LVL35
 2399 0227 02000000 		.4byte	.LVL36
 2400 022b 0100     		.2byte	0x1
 2401 022d 50       		.byte	0x50
 2402 022e 02000000 		.4byte	.LVL36
 2403 0232 12000000 		.4byte	.LFE46
 2404 0236 0400     		.2byte	0x4
 2405 0238 F3       		.byte	0xf3
 2406 0239 01       		.uleb128 0x1
 2407 023a 50       		.byte	0x50
 2408 023b 9F       		.byte	0x9f
 2409 023c 00000000 		.4byte	0
 2410 0240 00000000 		.4byte	0
 2411              	.LLST13:
 2412 0244 00000000 		.4byte	.LVL35
 2413 0248 0C000000 		.4byte	.LVL39
 2414 024c 0100     		.2byte	0x1
 2415 024e 51       		.byte	0x51
 2416 024f 0C000000 		.4byte	.LVL39
 2417 0253 12000000 		.4byte	.LFE46
 2418 0257 0400     		.2byte	0x4
 2419 0259 F3       		.byte	0xf3
 2420 025a 01       		.uleb128 0x1
 2421 025b 51       		.byte	0x51
 2422 025c 9F       		.byte	0x9f
 2423 025d 00000000 		.4byte	0
 2424 0261 00000000 		.4byte	0
 2425              	.LLST14:
 2426 0265 00000000 		.4byte	.LVL35
 2427 0269 0A000000 		.4byte	.LVL38
 2428 026d 0100     		.2byte	0x1
 2429 026f 52       		.byte	0x52
 2430 0270 0A000000 		.4byte	.LVL38
 2431 0274 12000000 		.4byte	.LFE46
 2432 0278 0400     		.2byte	0x4
 2433 027a F3       		.byte	0xf3
 2434 027b 01       		.uleb128 0x1
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 75


 2435 027c 52       		.byte	0x52
 2436 027d 9F       		.byte	0x9f
 2437 027e 00000000 		.4byte	0
 2438 0282 00000000 		.4byte	0
 2439              	.LLST15:
 2440 0286 00000000 		.4byte	.LVL35
 2441 028a 06000000 		.4byte	.LVL37
 2442 028e 0100     		.2byte	0x1
 2443 0290 53       		.byte	0x53
 2444 0291 06000000 		.4byte	.LVL37
 2445 0295 12000000 		.4byte	.LFE46
 2446 0299 0400     		.2byte	0x4
 2447 029b F3       		.byte	0xf3
 2448 029c 01       		.uleb128 0x1
 2449 029d 53       		.byte	0x53
 2450 029e 9F       		.byte	0x9f
 2451 029f 00000000 		.4byte	0
 2452 02a3 00000000 		.4byte	0
 2453              	.LLST16:
 2454 02a7 00000000 		.4byte	.LVL41
 2455 02ab 12000000 		.4byte	.LVL43
 2456 02af 0100     		.2byte	0x1
 2457 02b1 50       		.byte	0x50
 2458 02b2 12000000 		.4byte	.LVL43
 2459 02b6 9A000000 		.4byte	.LVL62
 2460 02ba 0100     		.2byte	0x1
 2461 02bc 57       		.byte	0x57
 2462 02bd 9A000000 		.4byte	.LVL62
 2463 02c1 A0000000 		.4byte	.LFE40
 2464 02c5 0400     		.2byte	0x4
 2465 02c7 F3       		.byte	0xf3
 2466 02c8 01       		.uleb128 0x1
 2467 02c9 50       		.byte	0x50
 2468 02ca 9F       		.byte	0x9f
 2469 02cb 00000000 		.4byte	0
 2470 02cf 00000000 		.4byte	0
 2471              	.LLST17:
 2472 02d3 00000000 		.4byte	.LVL41
 2473 02d7 12000000 		.4byte	.LVL43
 2474 02db 0100     		.2byte	0x1
 2475 02dd 51       		.byte	0x51
 2476 02de 12000000 		.4byte	.LVL43
 2477 02e2 9A000000 		.4byte	.LVL61
 2478 02e6 0100     		.2byte	0x1
 2479 02e8 56       		.byte	0x56
 2480 02e9 9A000000 		.4byte	.LVL61
 2481 02ed A0000000 		.4byte	.LFE40
 2482 02f1 0400     		.2byte	0x4
 2483 02f3 F3       		.byte	0xf3
 2484 02f4 01       		.uleb128 0x1
 2485 02f5 51       		.byte	0x51
 2486 02f6 9F       		.byte	0x9f
 2487 02f7 00000000 		.4byte	0
 2488 02fb 00000000 		.4byte	0
 2489              	.LLST18:
 2490 02ff 00000000 		.4byte	.LVL41
 2491 0303 12000000 		.4byte	.LVL43
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 76


 2492 0307 0100     		.2byte	0x1
 2493 0309 52       		.byte	0x52
 2494 030a 12000000 		.4byte	.LVL43
 2495 030e A0000000 		.4byte	.LFE40
 2496 0312 0200     		.2byte	0x2
 2497 0314 91       		.byte	0x91
 2498 0315 64       		.sleb128 -28
 2499 0316 00000000 		.4byte	0
 2500 031a 00000000 		.4byte	0
 2501              	.LLST19:
 2502 031e 20000000 		.4byte	.LVL44
 2503 0322 2A000000 		.4byte	.LVL45
 2504 0326 0200     		.2byte	0x2
 2505 0328 31       		.byte	0x31
 2506 0329 9F       		.byte	0x9f
 2507 032a 2C000000 		.4byte	.LVL46
 2508 032e 2E000000 		.4byte	.LVL47
 2509 0332 0200     		.2byte	0x2
 2510 0334 30       		.byte	0x30
 2511 0335 9F       		.byte	0x9f
 2512 0336 2E000000 		.4byte	.LVL47
 2513 033a 3E000000 		.4byte	.LVL49
 2514 033e 0100     		.2byte	0x1
 2515 0340 52       		.byte	0x52
 2516 0341 56000000 		.4byte	.LVL51
 2517 0345 6A000000 		.4byte	.LVL53
 2518 0349 0100     		.2byte	0x1
 2519 034b 52       		.byte	0x52
 2520 034c 00000000 		.4byte	0
 2521 0350 00000000 		.4byte	0
 2522              	.LLST20:
 2523 0354 20000000 		.4byte	.LVL44
 2524 0358 2A000000 		.4byte	.LVL45
 2525 035c 0100     		.2byte	0x1
 2526 035e 53       		.byte	0x53
 2527 035f 2C000000 		.4byte	.LVL46
 2528 0363 3A000000 		.4byte	.LVL48
 2529 0367 0100     		.2byte	0x1
 2530 0369 53       		.byte	0x53
 2531 036a 56000000 		.4byte	.LVL51
 2532 036e 68000000 		.4byte	.LVL52
 2533 0372 0100     		.2byte	0x1
 2534 0374 53       		.byte	0x53
 2535 0375 00000000 		.4byte	0
 2536 0379 00000000 		.4byte	0
 2537              	.LLST21:
 2538 037d 0E000000 		.4byte	.LVL42
 2539 0381 12000000 		.4byte	.LVL43
 2540 0385 0200     		.2byte	0x2
 2541 0387 31       		.byte	0x31
 2542 0388 9F       		.byte	0x9f
 2543 0389 12000000 		.4byte	.LVL43
 2544 038d 90000000 		.4byte	.LVL58
 2545 0391 0100     		.2byte	0x1
 2546 0393 54       		.byte	0x54
 2547 0394 90000000 		.4byte	.LVL58
 2548 0398 92000000 		.4byte	.LVL59
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 77


 2549 039c 0100     		.2byte	0x1
 2550 039e 53       		.byte	0x53
 2551 039f 92000000 		.4byte	.LVL59
 2552 03a3 9A000000 		.4byte	.LVL60
 2553 03a7 0100     		.2byte	0x1
 2554 03a9 54       		.byte	0x54
 2555 03aa 9A000000 		.4byte	.LVL60
 2556 03ae A0000000 		.4byte	.LFE40
 2557 03b2 0300     		.2byte	0x3
 2558 03b4 73       		.byte	0x73
 2559 03b5 7F       		.sleb128 -1
 2560 03b6 9F       		.byte	0x9f
 2561 03b7 00000000 		.4byte	0
 2562 03bb 00000000 		.4byte	0
 2563              	.LLST22:
 2564 03bf 7A000000 		.4byte	.LVL55
 2565 03c3 8E000000 		.4byte	.LVL57
 2566 03c7 0200     		.2byte	0x2
 2567 03c9 31       		.byte	0x31
 2568 03ca 9F       		.byte	0x9f
 2569 03cb 00000000 		.4byte	0
 2570 03cf 00000000 		.4byte	0
 2571              	.LLST23:
 2572 03d3 72000000 		.4byte	.LVL54
 2573 03d7 81000000 		.4byte	.LVL56-1
 2574 03db 0100     		.2byte	0x1
 2575 03dd 51       		.byte	0x51
 2576 03de 82000000 		.4byte	.LVL56
 2577 03e2 8E000000 		.4byte	.LVL57
 2578 03e6 0100     		.2byte	0x1
 2579 03e8 50       		.byte	0x50
 2580 03e9 00000000 		.4byte	0
 2581 03ed 00000000 		.4byte	0
 2582              	.LLST24:
 2583 03f1 00000000 		.4byte	.LVL63
 2584 03f5 22000000 		.4byte	.LVL69
 2585 03f9 0100     		.2byte	0x1
 2586 03fb 50       		.byte	0x50
 2587 03fc 22000000 		.4byte	.LVL69
 2588 0400 2C000000 		.4byte	.LFE39
 2589 0404 0400     		.2byte	0x4
 2590 0406 F3       		.byte	0xf3
 2591 0407 01       		.uleb128 0x1
 2592 0408 50       		.byte	0x50
 2593 0409 9F       		.byte	0x9f
 2594 040a 00000000 		.4byte	0
 2595 040e 00000000 		.4byte	0
 2596              	.LLST25:
 2597 0412 00000000 		.4byte	.LVL63
 2598 0416 16000000 		.4byte	.LVL67
 2599 041a 0100     		.2byte	0x1
 2600 041c 51       		.byte	0x51
 2601 041d 16000000 		.4byte	.LVL67
 2602 0421 2C000000 		.4byte	.LFE39
 2603 0425 0400     		.2byte	0x4
 2604 0427 F3       		.byte	0xf3
 2605 0428 01       		.uleb128 0x1
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 78


 2606 0429 51       		.byte	0x51
 2607 042a 9F       		.byte	0x9f
 2608 042b 00000000 		.4byte	0
 2609 042f 00000000 		.4byte	0
 2610              	.LLST26:
 2611 0433 02000000 		.4byte	.LVL64
 2612 0437 26000000 		.4byte	.LVL70
 2613 043b 0200     		.2byte	0x2
 2614 043d 30       		.byte	0x30
 2615 043e 9F       		.byte	0x9f
 2616 043f 26000000 		.4byte	.LVL70
 2617 0443 2C000000 		.4byte	.LFE39
 2618 0447 0100     		.2byte	0x1
 2619 0449 50       		.byte	0x50
 2620 044a 00000000 		.4byte	0
 2621 044e 00000000 		.4byte	0
 2622              	.LLST27:
 2623 0452 02000000 		.4byte	.LVL64
 2624 0456 10000000 		.4byte	.LVL66
 2625 045a 0200     		.2byte	0x2
 2626 045c 30       		.byte	0x30
 2627 045d 9F       		.byte	0x9f
 2628 045e 10000000 		.4byte	.LVL66
 2629 0462 18000000 		.4byte	.LVL68
 2630 0466 0100     		.2byte	0x1
 2631 0468 56       		.byte	0x56
 2632 0469 18000000 		.4byte	.LVL68
 2633 046d 25000000 		.4byte	.LVL70-1
 2634 0471 0100     		.2byte	0x1
 2635 0473 51       		.byte	0x51
 2636 0474 25000000 		.4byte	.LVL70-1
 2637 0478 26000000 		.4byte	.LVL73
 2638 047c 0F00     		.2byte	0xf
 2639 047e F3       		.byte	0xf3
 2640 047f 01       		.uleb128 0x1
 2641 0480 51       		.byte	0x51
 2642 0481 32       		.byte	0x32
 2643 0482 24       		.byte	0x24
 2644 0483 F3       		.byte	0xf3
 2645 0484 01       		.uleb128 0x1
 2646 0485 51       		.byte	0x51
 2647 0486 22       		.byte	0x22
 2648 0487 31       		.byte	0x31
 2649 0488 24       		.byte	0x24
 2650 0489 76       		.byte	0x76
 2651 048a 00       		.sleb128 0
 2652 048b 22       		.byte	0x22
 2653 048c 9F       		.byte	0x9f
 2654 048d 00000000 		.4byte	0
 2655 0491 00000000 		.4byte	0
 2656              	.LLST28:
 2657 0495 0E000000 		.4byte	.LVL65
 2658 0499 26000000 		.4byte	.LVL71
 2659 049d 0100     		.2byte	0x1
 2660 049f 54       		.byte	0x54
 2661 04a0 26000000 		.4byte	.LVL71
 2662 04a4 26000000 		.4byte	.LVL72
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 79


 2663 04a8 1000     		.2byte	0x10
 2664 04aa F3       		.byte	0xf3
 2665 04ab 01       		.uleb128 0x1
 2666 04ac 50       		.byte	0x50
 2667 04ad 33       		.byte	0x33
 2668 04ae 24       		.byte	0x24
 2669 04af F3       		.byte	0xf3
 2670 04b0 01       		.uleb128 0x1
 2671 04b1 50       		.byte	0x50
 2672 04b2 1C       		.byte	0x1c
 2673 04b3 32       		.byte	0x32
 2674 04b4 24       		.byte	0x24
 2675 04b5 75       		.byte	0x75
 2676 04b6 00       		.sleb128 0
 2677 04b7 22       		.byte	0x22
 2678 04b8 23       		.byte	0x23
 2679 04b9 04       		.uleb128 0x4
 2680 04ba 00000000 		.4byte	0
 2681 04be 00000000 		.4byte	0
 2682              	.LLST29:
 2683 04c2 00000000 		.4byte	.LVL74
 2684 04c6 14000000 		.4byte	.LVL77
 2685 04ca 0100     		.2byte	0x1
 2686 04cc 50       		.byte	0x50
 2687 04cd 14000000 		.4byte	.LVL77
 2688 04d1 28000000 		.4byte	.LVL84
 2689 04d5 0100     		.2byte	0x1
 2690 04d7 56       		.byte	0x56
 2691 04d8 28000000 		.4byte	.LVL84
 2692 04dc 30000000 		.4byte	.LFE38
 2693 04e0 0400     		.2byte	0x4
 2694 04e2 F3       		.byte	0xf3
 2695 04e3 01       		.uleb128 0x1
 2696 04e4 50       		.byte	0x50
 2697 04e5 9F       		.byte	0x9f
 2698 04e6 00000000 		.4byte	0
 2699 04ea 00000000 		.4byte	0
 2700              	.LLST30:
 2701 04ee 10000000 		.4byte	.LVL76
 2702 04f2 14000000 		.4byte	.LVL77
 2703 04f6 0100     		.2byte	0x1
 2704 04f8 53       		.byte	0x53
 2705 04f9 14000000 		.4byte	.LVL77
 2706 04fd 20000000 		.4byte	.LVL80
 2707 0501 0100     		.2byte	0x1
 2708 0503 54       		.byte	0x54
 2709 0504 20000000 		.4byte	.LVL80
 2710 0508 22000000 		.4byte	.LVL81
 2711 050c 0100     		.2byte	0x1
 2712 050e 53       		.byte	0x53
 2713 050f 22000000 		.4byte	.LVL81
 2714 0513 28000000 		.4byte	.LVL82
 2715 0517 0100     		.2byte	0x1
 2716 0519 54       		.byte	0x54
 2717 051a 28000000 		.4byte	.LVL82
 2718 051e 30000000 		.4byte	.LFE38
 2719 0522 0300     		.2byte	0x3
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 80


 2720 0524 73       		.byte	0x73
 2721 0525 7F       		.sleb128 -1
 2722 0526 9F       		.byte	0x9f
 2723 0527 00000000 		.4byte	0
 2724 052b 00000000 		.4byte	0
 2725              	.LLST31:
 2726 052f 10000000 		.4byte	.LVL76
 2727 0533 14000000 		.4byte	.LVL77
 2728 0537 0100     		.2byte	0x1
 2729 0539 53       		.byte	0x53
 2730 053a 00000000 		.4byte	0
 2731 053e 00000000 		.4byte	0
 2732              	.LLST32:
 2733 0542 04000000 		.4byte	.LVL75
 2734 0546 14000000 		.4byte	.LVL77
 2735 054a 0200     		.2byte	0x2
 2736 054c 30       		.byte	0x30
 2737 054d 9F       		.byte	0x9f
 2738 054e 14000000 		.4byte	.LVL77
 2739 0552 28000000 		.4byte	.LVL83
 2740 0556 0100     		.2byte	0x1
 2741 0558 55       		.byte	0x55
 2742 0559 28000000 		.4byte	.LVL83
 2743 055d 30000000 		.4byte	.LFE38
 2744 0561 0100     		.2byte	0x1
 2745 0563 50       		.byte	0x50
 2746 0564 00000000 		.4byte	0
 2747 0568 00000000 		.4byte	0
 2748              	.LLST33:
 2749 056c 02000000 		.4byte	.LVL85
 2750 0570 08000000 		.4byte	.LVL86
 2751 0574 0200     		.2byte	0x2
 2752 0576 3A       		.byte	0x3a
 2753 0577 9F       		.byte	0x9f
 2754 0578 08000000 		.4byte	.LVL86
 2755 057c 12000000 		.4byte	.LVL89
 2756 0580 0100     		.2byte	0x1
 2757 0582 54       		.byte	0x54
 2758 0583 12000000 		.4byte	.LVL89
 2759 0587 14000000 		.4byte	.LVL90
 2760 058b 0100     		.2byte	0x1
 2761 058d 53       		.byte	0x53
 2762 058e 14000000 		.4byte	.LVL90
 2763 0592 1A000000 		.4byte	.LVL91
 2764 0596 0100     		.2byte	0x1
 2765 0598 54       		.byte	0x54
 2766 0599 1A000000 		.4byte	.LVL91
 2767 059d 1C000000 		.4byte	.LFE37
 2768 05a1 0300     		.2byte	0x3
 2769 05a3 73       		.byte	0x73
 2770 05a4 7F       		.sleb128 -1
 2771 05a5 9F       		.byte	0x9f
 2772 05a6 00000000 		.4byte	0
 2773 05aa 00000000 		.4byte	0
 2774              	.LLST34:
 2775 05ae 02000000 		.4byte	.LVL85
 2776 05b2 08000000 		.4byte	.LVL86
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 81


 2777 05b6 0200     		.2byte	0x2
 2778 05b8 30       		.byte	0x30
 2779 05b9 9F       		.byte	0x9f
 2780 05ba 08000000 		.4byte	.LVL86
 2781 05be 1A000000 		.4byte	.LVL92
 2782 05c2 0100     		.2byte	0x1
 2783 05c4 55       		.byte	0x55
 2784 05c5 1A000000 		.4byte	.LVL92
 2785 05c9 1C000000 		.4byte	.LFE37
 2786 05cd 0100     		.2byte	0x1
 2787 05cf 50       		.byte	0x50
 2788 05d0 00000000 		.4byte	0
 2789 05d4 00000000 		.4byte	0
 2790              		.section	.debug_aranges,"",%progbits
 2791 0000 6C000000 		.4byte	0x6c
 2792 0004 0200     		.2byte	0x2
 2793 0006 00000000 		.4byte	.Ldebug_info0
 2794 000a 04       		.byte	0x4
 2795 000b 00       		.byte	0
 2796 000c 0000     		.2byte	0
 2797 000e 0000     		.2byte	0
 2798 0010 00000000 		.4byte	.LFB36
 2799 0014 02000000 		.4byte	.LFE36-.LFB36
 2800 0018 00000000 		.4byte	.LFB45
 2801 001c 1E000000 		.4byte	.LFE45-.LFB45
 2802 0020 00000000 		.4byte	.LFB44
 2803 0024 1E000000 		.4byte	.LFE44-.LFB44
 2804 0028 00000000 		.4byte	.LFB43
 2805 002c 2C000000 		.4byte	.LFE43-.LFB43
 2806 0030 00000000 		.4byte	.LFB42
 2807 0034 28000000 		.4byte	.LFE42-.LFB42
 2808 0038 00000000 		.4byte	.LFB41
 2809 003c 16000000 		.4byte	.LFE41-.LFB41
 2810 0040 00000000 		.4byte	.LFB46
 2811 0044 12000000 		.4byte	.LFE46-.LFB46
 2812 0048 00000000 		.4byte	.LFB40
 2813 004c A0000000 		.4byte	.LFE40-.LFB40
 2814 0050 00000000 		.4byte	.LFB39
 2815 0054 2C000000 		.4byte	.LFE39-.LFB39
 2816 0058 00000000 		.4byte	.LFB38
 2817 005c 30000000 		.4byte	.LFE38-.LFB38
 2818 0060 00000000 		.4byte	.LFB37
 2819 0064 1C000000 		.4byte	.LFE37-.LFB37
 2820 0068 00000000 		.4byte	0
 2821 006c 00000000 		.4byte	0
 2822              		.section	.debug_ranges,"",%progbits
 2823              	.Ldebug_ranges0:
 2824 0000 00000000 		.4byte	.LFB36
 2825 0004 02000000 		.4byte	.LFE36
 2826 0008 00000000 		.4byte	.LFB45
 2827 000c 1E000000 		.4byte	.LFE45
 2828 0010 00000000 		.4byte	.LFB44
 2829 0014 1E000000 		.4byte	.LFE44
 2830 0018 00000000 		.4byte	.LFB43
 2831 001c 2C000000 		.4byte	.LFE43
 2832 0020 00000000 		.4byte	.LFB42
 2833 0024 28000000 		.4byte	.LFE42
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 82


 2834 0028 00000000 		.4byte	.LFB41
 2835 002c 16000000 		.4byte	.LFE41
 2836 0030 00000000 		.4byte	.LFB46
 2837 0034 12000000 		.4byte	.LFE46
 2838 0038 00000000 		.4byte	.LFB40
 2839 003c A0000000 		.4byte	.LFE40
 2840 0040 00000000 		.4byte	.LFB39
 2841 0044 2C000000 		.4byte	.LFE39
 2842 0048 00000000 		.4byte	.LFB38
 2843 004c 30000000 		.4byte	.LFE38
 2844 0050 00000000 		.4byte	.LFB37
 2845 0054 1C000000 		.4byte	.LFE37
 2846 0058 00000000 		.4byte	0
 2847 005c 00000000 		.4byte	0
 2848              		.section	.debug_line,"",%progbits
 2849              	.Ldebug_line0:
 2850 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 2850      0200B401 
 2850      00000201 
 2850      FB0E0D00 
 2850      01010101 
 2851              	.LASF60:
 2852 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2852      656E7365 
 2852      5F464C41 
 2852      53485F53 
 2852      54525543 
 2853              	.LASF25:
 2854 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2854      656E7365 
 2854      5F4C4F57 
 2854      5F42534C 
 2854      4E5F5253 
 2855              	.LASF84:
 2856 0031 72657375 		.ascii	"result\000"
 2856      6C7400
 2857              	.LASF44:
 2858 0038 62736C6E 		.ascii	"bsln\000"
 2858      00
 2859              	.LASF68:
 2860 003d 73656E73 		.ascii	"sensorId\000"
 2860      6F724964 
 2860      00
 2861              	.LASF88:
 2862 0046 62736C6E 		.ascii	"bslnStatus\000"
 2862      53746174 
 2862      757300
 2863              	.LASF39:
 2864 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2864      736C6E52 
 2864      737400
 2865              	.LASF46:
 2866 005c 64696666 		.ascii	"diff\000"
 2866      00
 2867              	.LASF55:
 2868 0061 746F7461 		.ascii	"totalNumSns\000"
 2868      6C4E756D 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 83


 2868      536E7300 
 2869              	.LASF73:
 2870 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2870      656E7365 
 2870      5F496E69 
 2870      7469616C 
 2870      697A6541 
 2871              	.LASF40:
 2872 008d 69646163 		.ascii	"idacMod\000"
 2872      4D6F6400 
 2873              	.LASF5:
 2874 0095 73686F72 		.ascii	"short int\000"
 2874      7420696E 
 2874      7400
 2875              	.LASF74:
 2876 009f 696E7075 		.ascii	"input\000"
 2876      7400
 2877              	.LASF30:
 2878 00a5 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2878      656E7365 
 2878      5F57445F 
 2878      544F5543 
 2878      48504144 
 2879              	.LASF58:
 2880 00bc 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2880      656E7365 
 2880      5F464C41 
 2880      53485F57 
 2880      445F5354 
 2881              	.LASF82:
 2882 00d5 64696666 		.ascii	"difference\000"
 2882      6572656E 
 2882      636500
 2883              	.LASF90:
 2884 00e0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2884      43313120 
 2884      352E342E 
 2884      31203230 
 2884      31363036 
 2885 0113 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2885      20726576 
 2885      6973696F 
 2885      6E203233 
 2885      37373135 
 2886 0146 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2886      67202D66 
 2886      66756E63 
 2886      74696F6E 
 2886      2D736563 
 2887              	.LASF36:
 2888 0172 6E4E6F69 		.ascii	"nNoiseTh\000"
 2888      73655468 
 2888      00
 2889              	.LASF62:
 2890 017b 77645479 		.ascii	"wdType\000"
 2890      706500
 2891              	.LASF77:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 84


 2892 0182 66696C74 		.ascii	"filteredOutput\000"
 2892      65726564 
 2892      4F757470 
 2892      757400
 2893              	.LASF10:
 2894 0191 5F5F7569 		.ascii	"__uint32_t\000"
 2894      6E743332 
 2894      5F7400
 2895              	.LASF85:
 2896 019c 68697374 		.ascii	"history\000"
 2896      6F727900 
 2897              	.LASF42:
 2898 01a4 736E7343 		.ascii	"snsClkSource\000"
 2898      6C6B536F 
 2898      75726365 
 2898      00
 2899              	.LASF7:
 2900 01b1 5F5F7569 		.ascii	"__uint16_t\000"
 2900      6E743136 
 2900      5F7400
 2901              	.LASF92:
 2902 01bc 433A5C55 		.ascii	"C:\\Users\\Coal\\Documents\\Github\\Capasitor PSoC "
 2902      73657273 
 2902      5C436F61 
 2902      6C5C446F 
 2902      63756D65 
 2903 01ea 365C4361 		.ascii	"6\\Capasitor.cydsn\000"
 2903      70617369 
 2903      746F722E 
 2903      63796473 
 2903      6E00
 2904              	.LASF26:
 2905 01fc 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2905      656E7365 
 2905      5F57445F 
 2905      42555454 
 2905      4F4E5F45 
 2906              	.LASF35:
 2907 0211 6E6F6973 		.ascii	"noiseTh\000"
 2907      65546800 
 2908              	.LASF22:
 2909 0219 75696E74 		.ascii	"uint16\000"
 2909      313600
 2910              	.LASF86:
 2911 0220 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2911      656E7365 
 2911      5F557064 
 2911      61746553 
 2911      656E736F 
 2912              	.LASF53:
 2913 023e 70747232 		.ascii	"ptr2DebounceArr\000"
 2913      4465626F 
 2913      756E6365 
 2913      41727200 
 2914              	.LASF13:
 2915 024e 75696E74 		.ascii	"uint8_t\000"
 2915      385F7400 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 85


 2916              	.LASF21:
 2917 0256 75696E74 		.ascii	"uint8\000"
 2917      3800
 2918              	.LASF80:
 2919 025c 70747257 		.ascii	"ptrWidgetRam\000"
 2919      69646765 
 2919      7452616D 
 2919      00
 2920              	.LASF41:
 2921 0269 736E7343 		.ascii	"snsClk\000"
 2921      6C6B00
 2922              	.LASF64:
 2923 0270 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2923      656E7365 
 2923      5F467449 
 2923      6E697469 
 2923      616C697A 
 2924              	.LASF78:
 2925 0295 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2925      656E7365 
 2925      5F467449 
 2925      49523173 
 2925      744F7264 
 2926              	.LASF31:
 2927 02ac 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2927      656E7365 
 2927      5F57445F 
 2927      50524F58 
 2927      494D4954 
 2928              	.LASF18:
 2929 02c4 666C6F61 		.ascii	"float\000"
 2929      7400
 2930              	.LASF1:
 2931 02ca 6C6F6E67 		.ascii	"long long int\000"
 2931      206C6F6E 
 2931      6720696E 
 2931      7400
 2932              	.LASF17:
 2933 02d8 63686172 		.ascii	"char\000"
 2933      00
 2934              	.LASF9:
 2935 02dd 6C6F6E67 		.ascii	"long int\000"
 2935      20696E74 
 2935      00
 2936              	.LASF76:
 2937 02e6 73686966 		.ascii	"shift\000"
 2937      7400
 2938              	.LASF56:
 2939 02ec 77646774 		.ascii	"wdgtType\000"
 2939      54797065 
 2939      00
 2940              	.LASF91:
 2941 02f5 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
 2941      72617465 
 2941      645F536F 
 2941      75726365 
 2941      5C50536F 
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 86


 2942              	.LASF16:
 2943 031e 73697A65 		.ascii	"sizetype\000"
 2943      74797065 
 2943      00
 2944              	.LASF24:
 2945 0327 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2945      656E7365 
 2945      5F544852 
 2945      4553484F 
 2945      4C445F54 
 2946              	.LASF47:
 2947 033f 6E656742 		.ascii	"negBslnRstCnt\000"
 2947      736C6E52 
 2947      7374436E 
 2947      7400
 2948              	.LASF6:
 2949 034d 5F5F7569 		.ascii	"__uint8_t\000"
 2949      6E74385F 
 2949      7400
 2950              	.LASF38:
 2951 0357 6F6E4465 		.ascii	"onDebounce\000"
 2951      626F756E 
 2951      636500
 2952              	.LASF34:
 2953 0362 66696E67 		.ascii	"fingerTh\000"
 2953      65725468 
 2953      00
 2954              	.LASF57:
 2955 036b 6E756D43 		.ascii	"numCols\000"
 2955      6F6C7300 
 2956              	.LASF66:
 2957 0373 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2957      656E7365 
 2957      5F496E69 
 2957      7469616C 
 2957      697A6553 
 2958              	.LASF37:
 2959 0395 68797374 		.ascii	"hysteresis\000"
 2959      65726573 
 2959      697300
 2960              	.LASF2:
 2961 03a0 6C6F6E67 		.ascii	"long double\000"
 2961      20646F75 
 2961      626C6500 
 2962              	.LASF4:
 2963 03ac 756E7369 		.ascii	"unsigned char\000"
 2963      676E6564 
 2963      20636861 
 2963      7200
 2964              	.LASF72:
 2965 03ba 70747257 		.ascii	"ptrWidget\000"
 2965      69646765 
 2965      7400
 2966              	.LASF20:
 2967 03c4 63795F73 		.ascii	"cy_status\000"
 2967      74617475 
 2967      7300
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 87


 2968              	.LASF3:
 2969 03ce 7369676E 		.ascii	"signed char\000"
 2969      65642063 
 2969      68617200 
 2970              	.LASF12:
 2971 03da 6C6F6E67 		.ascii	"long long unsigned int\000"
 2971      206C6F6E 
 2971      6720756E 
 2971      7369676E 
 2971      65642069 
 2972              	.LASF15:
 2973 03f1 75696E74 		.ascii	"uint32_t\000"
 2973      33325F74 
 2973      00
 2974              	.LASF54:
 2975 03fa 73746174 		.ascii	"staticConfig\000"
 2975      6963436F 
 2975      6E666967 
 2975      00
 2976              	.LASF0:
 2977 0407 756E7369 		.ascii	"unsigned int\000"
 2977      676E6564 
 2977      20696E74 
 2977      00
 2978              	.LASF14:
 2979 0414 75696E74 		.ascii	"uint16_t\000"
 2979      31365F74 
 2979      00
 2980              	.LASF69:
 2981 041d 66726571 		.ascii	"freqChannel\000"
 2981      4368616E 
 2981      6E656C00 
 2982              	.LASF48:
 2983 0429 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2983      656E7365 
 2983      5F52414D 
 2983      5F534E53 
 2983      5F535452 
 2984              	.LASF87:
 2985 0441 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2985      656E7365 
 2985      5F557064 
 2985      61746557 
 2985      69646765 
 2986              	.LASF27:
 2987 045f 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2987      656E7365 
 2987      5F57445F 
 2987      4C494E45 
 2987      41525F53 
 2988              	.LASF8:
 2989 047b 73686F72 		.ascii	"short unsigned int\000"
 2989      7420756E 
 2989      7369676E 
 2989      65642069 
 2989      6E7400
 2990              	.LASF89:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 88


 2991 048e 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2991      656E7365 
 2991      5F557064 
 2991      61746541 
 2991      6C6C4261 
 2992              	.LASF93:
 2993 04aa 43617053 		.ascii	"CapSense_FtInitialize\000"
 2993      656E7365 
 2993      5F467449 
 2993      6E697469 
 2993      616C697A 
 2994              	.LASF65:
 2995 04c0 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2995      656E7365 
 2995      5F467449 
 2995      6E697469 
 2995      616C697A 
 2996              	.LASF33:
 2997 04de 7265736F 		.ascii	"resolution\000"
 2997      6C757469 
 2997      6F6E00
 2998              	.LASF63:
 2999 04e9 6368616E 		.ascii	"channel\000"
 2999      6E656C00 
 3000              	.LASF79:
 3001 04f1 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 3001      656E7365 
 3001      5F467455 
 3001      70646174 
 3001      65426173 
 3002              	.LASF71:
 3003 050b 73656E73 		.ascii	"sensorsNumber\000"
 3003      6F72734E 
 3003      756D6265 
 3003      7200
 3004              	.LASF50:
 3005 0519 70747232 		.ascii	"ptr2WdgtRam\000"
 3005      57646774 
 3005      52616D00 
 3006              	.LASF83:
 3007 0525 62617365 		.ascii	"baselineCoeff\000"
 3007      6C696E65 
 3007      436F6566 
 3007      6600
 3008              	.LASF28:
 3009 0533 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 3009      656E7365 
 3009      5F57445F 
 3009      52414449 
 3009      414C5F53 
 3010              	.LASF67:
 3011 054f 77696467 		.ascii	"widgetId\000"
 3011      65744964 
 3011      00
 3012              	.LASF23:
 3013 0558 75696E74 		.ascii	"uint32\000"
 3013      333200
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 89


 3014              	.LASF11:
 3015 055f 6C6F6E67 		.ascii	"long unsigned int\000"
 3015      20756E73 
 3015      69676E65 
 3015      6420696E 
 3015      7400
 3016              	.LASF81:
 3017 0571 7369676E 		.ascii	"sign\000"
 3017      00
 3018              	.LASF19:
 3019 0576 646F7562 		.ascii	"double\000"
 3019      6C6500
 3020              	.LASF45:
 3021 057d 62736C6E 		.ascii	"bslnExt\000"
 3021      45787400 
 3022              	.LASF32:
 3023 0585 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 3023      656E7365 
 3023      5F57445F 
 3023      54595045 
 3023      5F454E55 
 3024              	.LASF75:
 3025 059b 70726576 		.ascii	"prevOutput\000"
 3025      4F757470 
 3025      757400
 3026              	.LASF29:
 3027 05a6 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 3027      656E7365 
 3027      5F57445F 
 3027      4D415452 
 3027      49585F42 
 3028              	.LASF51:
 3029 05c2 70747232 		.ascii	"ptr2SnsRam\000"
 3029      536E7352 
 3029      616D00
 3030              	.LASF70:
 3031 05cd 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 3031      656E7365 
 3031      5F496E69 
 3031      7469616C 
 3031      697A6557 
 3032              	.LASF52:
 3033 05ef 70747232 		.ascii	"ptr2FltrHistory\000"
 3033      466C7472 
 3033      48697374 
 3033      6F727900 
 3034              	.LASF59:
 3035 05ff 77646774 		.ascii	"wdgtArray\000"
 3035      41727261 
 3035      7900
 3036              	.LASF94:
 3037 0609 43617053 		.ascii	"CapSense_dsFlash\000"
 3037      656E7365 
 3037      5F647346 
 3037      6C617368 
 3037      00
 3038              	.LASF43:
ARM GAS  C:\Users\Coal\AppData\Local\Temp\ccQAqnRP.s 			page 90


 3039 061a 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 3039      656E7365 
 3039      5F52414D 
 3039      5F57445F 
 3039      42415345 
 3040              	.LASF49:
 3041 0636 70747232 		.ascii	"ptr2SnsFlash\000"
 3041      536E7346 
 3041      6C617368 
 3041      00
 3042              	.LASF61:
 3043 0643 70747253 		.ascii	"ptrSensor\000"
 3043      656E736F 
 3043      7200
 3044              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
